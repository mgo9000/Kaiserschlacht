{"version":3,"names":[],"mappings":"","sources":["kaiserschlacht.mjs"],"sourcesContent":["/**\r\n * Extend the base Actor document by defining a custom roll data structure which is ideal for the Simple system.\r\n * @extends {Actor}\r\n */\r\nclass KSActor extends Actor {\r\n  /** @override */\r\n  prepareData() {\r\n    // Prepare data for the actor. Calling the super version of this executes\r\n    // the following, in order: data reset (to clear active effects),\r\n    // prepareBaseData(), prepareEmbeddedDocuments() (including active effects),\r\n    // prepareDerivedData().\r\n    super.prepareData();\r\n  }\r\n\r\n  /** @override */\r\n  prepareBaseData() {\r\n    // Data modifications in this step occur before processing embedded\r\n    // documents or derived data.\r\n\r\n  }\r\n\r\n  /**\r\n   * @override\r\n   * Augment the actor source data with additional dynamic data. Typically,\r\n   * you'll want to handle most of your calculated/derived data in this step.\r\n   * Data calculated in this step should generally not exist in template.json\r\n   * (such as ability modifiers rather than ability scores) and should be\r\n   * available both inside and outside of character sheets (such as if an actor\r\n   * is queried and has a roll executed directly from it).\r\n   */\r\n  prepareDerivedData() {\r\n    const actorData = this;\r\n    actorData.system;\r\n    actorData.flags.kaiserschlacht || {};\r\n\r\n    // Make separate methods for each Actor type (character, npc, etc.) to keep\r\n    // things organized.\r\n    this._prepareCharacterData(actorData);\r\n    this._prepareNpcData(actorData);\r\n  }\r\n\r\n  /**\r\n   * Prepare Character type specific data\r\n   */\r\n  _prepareCharacterData(actorData) {\r\n    if (actorData.type !== 'character') return;\r\n\r\n    // Make modifications to data here. For example:\r\n    const systemData = actorData.system;\r\n\r\n\r\n    // Loop through ability scores, and add their modifiers to our sheet output.\r\n    for (let [key, ability] of Object.entries(systemData.abilities)) {\r\n      // Calculate the modifier using dice pool rules.\r\n      let dicepool = [\"1d4\", \"1d4\", \"1d6\", \"1d8\", \"1d8+1d4\", \"1d8+1d6\", \"2d8\"];\r\n      if (ability.value + ability.bonus > 6) {\r\n        ability.mod = dicepool[6];\r\n      }\r\n      else if (ability.value < 0) {\r\n        ability.mod = dicepool[0];\r\n      }\r\n      else {\r\n        ability.mod = dicepool[ability.value + ability.bonus] ?? \"Error\";\r\n      }\r\n\r\n    }\r\n    for (let [key, skill] of Object.entries(systemData.skills)) {\r\n      let dicepool = [\"1d4\", \"1d4\", \"1d6\", \"1d8\", \"1d8+1d4\", \"1d8+1d6\", \"2d8\"];\r\n      if (skill.value + skill.bonus > 6) {\r\n        skill.mod = dicepool[6];\r\n      }\r\n      else if (skill.value + skill.bonus < 0) {\r\n        skill.mod = dicepool[0];\r\n      }\r\n      else {\r\n        skill.mod = dicepool[skill.value + skill.bonus] ?? \"Error\";\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n\r\n  /**\r\n   * Prepare NPC type specific data.\r\n   */\r\n  _prepareNpcData(actorData) {\r\n    if (actorData.type !== 'npc') return;\r\n\r\n    // Make modifications to data here. For example:\r\n    const systemData = actorData.system;\r\n    systemData.xp = systemData.cr * systemData.cr * 100;\r\n  }\r\n\r\n  /**\r\n   * Override getRollData() that's supplied to rolls.\r\n   */\r\n  getRollData() {\r\n    // Starts off by populating the roll data with `this.system`\r\n    const data = { ...super.getRollData() };\r\n\r\n    // Prepare character roll data.\r\n    this._getCharacterRollData(data);\r\n    this._getNpcRollData(data);\r\n\r\n    return data;\r\n  }\r\n\r\n  /**\r\n   * Prepare character roll data.\r\n   */\r\n  _getCharacterRollData(data) {\r\n    if (this.type !== 'character') return;\r\n\r\n    // Copy the ability scores to the top level, so that rolls can use\r\n    // formulas like `@physique.mod + 4`.\r\n    if (data.abilities) {\r\n      for (let [k, v] of Object.entries(data.abilities)) {\r\n        data[k] = foundry.utils.deepClone(v);\r\n      }\r\n    }\r\n    if (data.skills) {\r\n      for (let [k, v] of Object.entries(data.skills)) {\r\n        data[k] = foundry.utils.deepClone(v);\r\n      }\r\n    }\r\n    if (data.classStats) {\r\n      for (let [k, v] of Object.entries(data.classStats)) {\r\n        data[k] = foundry.utils.deepClone(v);\r\n      }\r\n    }\r\n    // Add skillPoints for easier access, or fall back to 0.\r\n    if (data.attributes.skillPoints) {\r\n      data.skillPoints = data.attributes.skillPoints.value ?? 0;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Prepare NPC roll data.\r\n   */\r\n  _getNpcRollData(data) {\r\n    if (this.type !== 'npc') return;\r\n\r\n    // Process additional NPC data here.\r\n  }\r\n\r\n  //Default token params overwritten \r\n\r\n  /** @override */\r\n  async _preCreate(data, options, user) {\r\n    if ((await super._preCreate(data, options, user)) === false) return false;\r\n\r\n    // Configure prototype token initial settings\r\n    const prototypeToken = {};\r\n    // Object.assign(prototypeToken, {bar2:{attribute: null}});\r\n    if (this.type === \"character\") Object.assign(prototypeToken, {\r\n      sight: { enabled: true }, actorLink: true, disposition: 1\r\n    });\r\n    this.updateSource({ prototypeToken });\r\n  }\r\n\r\n  // Apply damage\r\n  async _applyDamage(damage, damageTags = null) {\r\n    const damageTemplate = \"systems/kaiserschlacht/templates/chat/damage-card.hbs\";\r\n    const damageValue = damage;\r\n    const currentHealth = this.system.health.value;\r\n    const armorPiercing = damageTags.includes(\"ap\") || damageTags.includes(\"AP\");\r\n    const piercing = damageTags.includes(\"piercing\") || damageTags.includes(\"Piercing\");\r\n    const currentArmor = this.system.armor;\r\n    let adjustedArmor;\r\n    let APBeaten = false;\r\n    if ((armorPiercing && damageValue >= currentArmor)) {\r\n      APBeaten = true;\r\n      adjustedArmor = Math.clamped(currentArmor - 1, 0, 9999);\r\n      this.update({ system: { armor: adjustedArmor } });\r\n    }\r\n    else {\r\n      APBeaten = false;\r\n    }\r\n    let adjustedDamage = piercing === true ? Math.clamped(damageValue, 0, 9999) : Math.clamped(damageValue - currentArmor, 0, 9999);\r\n    let adjustedHealth = Math.clamped(currentHealth - adjustedDamage, 0, 9999);\r\n    this.update({ system: { health: { value: adjustedHealth } } });\r\n    const templateData = {\r\n      recipient: this.name,\r\n      originalDamage: damageValue,\r\n      totalDamage: adjustedDamage,\r\n      originalHealth: currentHealth,\r\n      armor: currentArmor,\r\n      ap: armorPiercing || piercing,\r\n      beaten: APBeaten,\r\n      user: game.user.id,\r\n      uuid: this.uuid\r\n    };\r\n    const html = await renderTemplate(damageTemplate, templateData);\r\n\r\n    const chatData = {\r\n      user: game.user.id,\r\n      content: html,\r\n      // speaker: ChatMessage.getSpeaker({ actor: this })\r\n    };\r\n\r\n    ChatMessage.create(chatData);\r\n  }\r\n\r\n}\n\n/**\r\n * @param {string} formula                       The string formula to parse\r\n * @param {object} data                          The data object which attribute values are taken from\r\n * @param {object} [options={}]                 Options which modify or describe the Roll\r\n * @param {object} [options.targetedToken]   The token which is provided as a target.\r\n * @param {number} [options.targetNumber]   the target number of a check, if provided\r\n * @param {number} [options.damage=null]   the damage, if provided\r\n * * @param {number} [options.reload=null]   the reload target number, if provided\r\n * @param {string} [options.damageTags=null]   the tags for the damage to be applied, if provided\r\n */\r\nclass KSRoll extends Roll {\r\n   constructor(formula, data, options) {\r\n      super(formula, data, options);\r\n      console.log(this.options.targetNumber);\r\n      if (this.options.targetNumber === undefined) {this.configureTargetNumber();}\r\n    }\r\n   /** @override */\r\n   static CHAT_TEMPLATE = \"systems/kaiserschlacht/templates/chat/roll.hbs\";\r\n   /* -------------------------------------------- */\r\n\r\n   /**\r\n    * Return the target number from the data of a targetted token.\r\n    * @type {number}\r\n    */\r\n   configureTargetNumber() {\r\n      this.options.targetNumber = game.user.targets.first()?.document.actor.system.targetNumber ?? null;\r\n   }\r\n\r\n\r\n   /** @inheritdoc */\r\n   async toMessage(messageData = {}, options = {}) {\r\n      return super.toMessage(messageData, options);\r\n   }\r\n   async getDegreeOfSuccess() {\r\n      if ( !this._evaluated ) await this.evaluate({async: true});\r\n      console.log(this.options.targetNumber);\r\n      if (this.options.targetNumber === null){\r\n         return null;\r\n      }\r\n      else {\r\n         const degreeOfSuccess = this.total >= this.options.targetNumber ? true : false;\r\n         console.log(degreeOfSuccess);\r\n         return degreeOfSuccess;\r\n      }\r\n   }\r\n     /* -------------------------------------------- */\r\n\r\n  /**\r\n   * Render a Roll instance to HTML\r\n   * @override\r\n   * @param {object} [options={}]               Options which affect how the Roll is rendered\r\n   * @param {string} [options.flavor]             Flavor text to include\r\n   * @param {string} [options.template]           A custom HTML template path\r\n   * @param {boolean} [options.isPrivate=false]   Is the Roll displayed privately?\r\n   * @returns {Promise<string>}                 The rendered HTML template as a string\r\n   */\r\n  async render({flavor, template=this.constructor.CHAT_TEMPLATE, isPrivate=false}={}) {\r\n   if ( !this._evaluated ) await this.evaluate({async: true});\r\n   const chatData = {\r\n     formula: isPrivate ? \"???\" : this._formula,\r\n     flavor: isPrivate ? null : flavor,\r\n     targetNumber: isPrivate ? null : this.options.targetNumber,\r\n     damage: isPrivate ? null : this.options.damage,\r\n     reload: isPrivate ? null : this.options.reload,\r\n     damageTags: isPrivate ? null : this.options.damageTags,\r\n     degreeOfSuccess: isPrivate ? null : await this.getDegreeOfSuccess(),\r\n     user: game.user.id,\r\n     tooltip: isPrivate ? \"\" : await this.getTooltip(),\r\n     total: isPrivate ? \"?\" : Math.round(this.total * 100) / 100\r\n   };\r\n   return renderTemplate(template, chatData);\r\n }\r\n}\n\nasync function diffDialog(formula){\r\nconst diffMod = await Dialog.wait({\r\n    title: \"Difficulty Dialog\",\r\n    content: \"Select the difficulty die.\",\r\n    buttons: {\r\n        one: { icon: '<class=\"roll die d4\">',\r\n        label: \"d4\", callback: () => {\r\n            const diffMod = \" - 1d4[diff]\";\r\n            return diffMod;\r\n      }},\r\n      two: { icon: '<class=\"roll die d6\">',\r\n        label: \"d6\", callback: () => {\r\n            const diffMod = \" - 1d6[diff]\";\r\n            return diffMod;\r\n      }},\r\n      three: { icon: '<class=\"roll die d8\">',\r\n        label: \"d8\", callback: () => {\r\n            const diffMod = \" - 1d8[diff]\";\r\n            return diffMod;\r\n      }},\r\n      four: { icon: '<class=\"roll die d10\">',\r\n        label: \"d10\", callback: () => {\r\n            const diffMod = \" - 1d10[diff]\";\r\n            return diffMod;\r\n      }},\r\n      five: { icon: '<class=\"roll die d12\">',\r\n        label: \"d12\", callback: () => {\r\n            const diffMod = \" - 1d12[diff]\";\r\n            return diffMod;\r\n      }},\r\n      \r\n    },\r\n  });\r\n    let amendedFormula = (formula + diffMod);\r\n      return amendedFormula;\r\n  \r\n}\n\n/**\r\n * Extend the basic Item with some very simple modifications.\r\n * @extends {Item}\r\n */\r\nclass KSItem extends Item {\r\n  /**\r\n   * Augment the basic Item data model with additional dynamic data.\r\n   */\r\n  prepareData() {\r\n    // As with the actor class, items are documents that can have their data\r\n    // preparation methods overridden (such as prepareBaseData()).\r\n    super.prepareData();\r\n    if (this.system.equipped === false) {\r\n      this.collections.effects.forEach(e => e.update({ transfer: false }));\r\n\r\n    }\r\n\r\n  }\r\n  /**\r\n   * Returns a given item's attack roll.\r\n   * @type {string}\r\n   */\r\n  get attackFormula() {\r\n    let weaponType = this.system.type || \"ranged\";\r\n    switch (weaponType) {\r\n      case \"ranged\":\r\n        return \"@skills.shooting.mod\";\r\n      case \"melee\":\r\n        return \"@skills.brawl.mod\";\r\n      case \"thrown\":\r\n        return \"@skills.athletics.mod\";\r\n      case \"acrobatics\":\r\n        return \"@skills.acrobatics.mod\";\r\n      default:\r\n        console.log(\"improper weapon type given, defaulting to ranged\");\r\n        return \"@skills.shooting.mod\";\r\n    }\r\n  }\r\n  /**\r\n   * Prepare a data object which defines the data schema used by dice roll commands against this Item\r\n   * @override\r\n   */\r\n  getRollData() {\r\n    // Starts off by populating the roll data with `this.system`\r\n    const rollData = { ...super.getRollData() };\r\n\r\n    // Quit early if there's no parent actor\r\n    if (!this.actor) return rollData;\r\n\r\n    // If present, add the actor's roll data\r\n    rollData.actor = this.actor.getRollData();\r\n\r\n    return rollData;\r\n  }\r\n\r\n  /**\r\n   * Handle clickable rolls.\r\n   * @param {Event} event   The originating click event\r\n   * @private\r\n   */\r\n  async roll() {\r\n    const item = this;\r\n    console.log(item);\r\n    await this.system;\r\n    console.log(this.system);\r\n\r\n    // Initialize chat data.\r\n    const speaker = ChatMessage.getSpeaker({ actor: this.actor });\r\n    console.log(this.actor);\r\n    const rollMode = game.settings.get('core', 'rollMode');\r\n    const label = `${item.name}`;\r\n\r\n    // If there's no roll data, send a chat message.\r\n    if (!this.system.formula) {\r\n      if (this.system.reload) {\r\n        // Retrieve roll data.\r\n        const rollData = await this.getRollData();\r\n\r\n        // Invoke the roll and submit it to chat.\r\n        const roll = new KSRoll(\"1d6\", rollData, { targetNumber: rollData.reload });\r\n        // If you need to store the value first, uncomment the next line.\r\n        // const result = await roll.evaluate();\r\n        roll.toMessage({\r\n          speaker: speaker,\r\n          rollMode: rollMode,\r\n          flavor: \"Reload\",\r\n        });\r\n        return roll;\r\n      }\r\n      else\r\n        ChatMessage.create({\r\n          speaker: speaker,\r\n          rollMode: rollMode,\r\n          flavor: label,\r\n          content: item.system.description ?? '',\r\n        });\r\n    }\r\n    // Otherwise, create a roll and send a chat message from it.\r\n    else {\r\n      // Retrieve roll data.\r\n      const rollData = await this.getRollData();\r\n\r\n      // Invoke the roll and submit it to chat.\r\n      const roll = new KSRoll(rollData.formula, rollData);\r\n      // If you need to store the value first, uncomment the next line.\r\n      // const result = await roll.evaluate();\r\n      roll.toMessage({\r\n        speaker: speaker,\r\n        rollMode: rollMode,\r\n        flavor: label,\r\n      });\r\n      return roll;\r\n    }\r\n  }\r\n  /**\r\n   * Handle attack rolls from a given weapon.\r\n   * @param {Event} event   The originating click event\r\n   * @private\r\n   */\r\n  async attackRoll() {\r\n    const item = this;\r\n    console.log(item);\r\n    await this.system;\r\n    console.log(this.system);\r\n\r\n    // Initialize chat data.\r\n    const speaker = ChatMessage.getSpeaker({ actor: this.actor });\r\n    const rollMode = game.settings.get('core', 'rollMode');\r\n    const label = `${item.name}`;\r\n\r\n    // If there's no roll data, send a chat message.\r\n    if (!this.attackFormula) {\r\n      ChatMessage.create({\r\n        speaker: speaker,\r\n        rollMode: rollMode,\r\n        flavor: label,\r\n        content: item.system.description ?? '',\r\n      });\r\n    }\r\n    // Otherwise, create a roll and send a chat message from it.\r\n    else {\r\n      // Retrieve roll data.\r\n      const rollData = await this.getRollData();\r\n      let formula = this.attackFormula;\r\n      const amendedFormula = await diffDialog(formula);\r\n      // Invoke the roll and submit it to chat.\r\n      const roll = new KSRoll(amendedFormula, rollData.actor, { reload: this.system.reload || null, damage: this.system.damage || 0, damageTags: this.system.weaponTraits || null });\r\n      // If you need to store the value first, uncomment the next line.\r\n      // const result = await roll.evaluate();\r\n      roll.toMessage({\r\n        speaker: speaker,\r\n        rollMode: rollMode,\r\n        flavor: label,\r\n      });\r\n      return roll;\r\n    }\r\n  }\r\n  equipToggle() { //toggles equip value and whether the items are deleted or not\r\n    if (this.system.equipped) {\r\n      this.update({ system: { equipped: false } });\r\n      this.collections.effects.forEach(e => e.update({ transfer: false }));\r\n    }\r\n    else {\r\n      this.update({ system: { equipped: true } });\r\n      this.collections.effects.forEach(e => e.update({ transfer: true }));\r\n    }\r\n\r\n  }\r\n}\n\n/**\r\n* Extend the base ChatMessage document\r\n* @extends {ChatMessage}\r\n*/\r\nclass KSChatMessage extends ChatMessage {\r\n  /** @inheritDoc */\r\n  async getHTML(...args) {\r\n    const html = await super.getHTML();\r\n    console.log(html);\r\n    this._configureButtons(html[0]);\r\n    return html;\r\n  }\r\n  _configureButtons(html) {\r\n    html.querySelectorAll(\".apply-damage-button\").forEach(el => el.addEventListener(\"click\", this._onClickApplyDamage.bind(this)));\r\n    html.querySelectorAll(\".reload-button\").forEach(el => el.addEventListener(\"click\", this._onClickChatReload.bind(this)));\r\n    html.querySelectorAll(\".undo-damage-button\").forEach(el => el.addEventListener(\"click\", this._onClickUndoDamage.bind(this)));\r\n  }\r\n  _onClickApplyDamage(event) {\r\n    event.preventDefault();\r\n    const a = event.currentTarget;\r\n    let dataset = a.dataset;\r\n    const targetTokens = canvas.tokens.controlled;\r\n    if (targetTokens.length <= 0) ui.notifications.warn(\"You must select a token first.\");\r\n    for (let token of targetTokens) {\r\n      token.actor._applyDamage(dataset.damage, dataset.damageTags);\r\n    }\r\n\r\n  }\r\n  _onClickChatReload(event) {\r\n    event.preventDefault();\r\n    const a = event.currentTarget;\r\n    let dataset = a.dataset;\r\n\r\n    const speaker = KSChatMessage.getSpeaker({ actor: this.actor });\r\n    const rollMode = game.settings.get('core', 'rollMode');\r\n    const roll = new KSRoll(\"1d6\", dataset, { targetNumber: dataset.reload });\r\n    roll.toMessage({\r\n      speaker: speaker,\r\n      rollMode: rollMode,\r\n      flavor: \"Reload\",\r\n    });\r\n    return roll;\r\n\r\n  }\r\n  // undo damage\r\n  async _onClickUndoDamage(event) {\r\n    event.preventDefault();\r\n    const a = event.currentTarget;\r\n    const messageId = a.closest(\"[data-message-id]\")?.dataset.messageId;\r\n    const message = game.messages.get(messageId);\r\n\r\n    let dataset = a.dataset;\r\n    const uuid = dataset.uuid;\r\n    let actor = await fromUuid(uuid);\r\n    const originalHealth = dataset.originalHealth;\r\n    const originalArmor = dataset.originalArmor;\r\n    actor.update({ system: { health: { value: originalHealth } } });\r\n    actor.update({ system: { armor: originalArmor } });\r\n    ui.notifications.info(`Damage to ${actor.name} reverted.`);\r\n\r\n    a.remove();\r\n    message.delete();\r\n  }\r\n}\n\n/**\r\n * Manage Active Effect instances through an Actor or Item Sheet via effect control buttons.\r\n * @param {MouseEvent} event      The left-click event on the effect control\r\n * @param {Actor|Item} owner      The owning document which manages this effect\r\n */\r\nfunction onManageActiveEffect(event, owner) {\r\n  event.preventDefault();\r\n  const a = event.currentTarget;\r\n  const li = a.closest('li');\r\n  const effect = li.dataset.effectId\r\n    ? owner.effects.get(li.dataset.effectId)\r\n    : null;\r\n  switch (a.dataset.action) {\r\n    case 'create':\r\n      return owner.createEmbeddedDocuments('ActiveEffect', [\r\n        {\r\n          name: game.i18n.format('DOCUMENT.New', {\r\n            type: game.i18n.localize('DOCUMENT.ActiveEffect'),\r\n          }),\r\n          icon: 'icons/svg/aura.svg',\r\n          origin: owner.uuid,\r\n          'duration.rounds':\r\n            li.dataset.effectType === 'temporary' ? 1 : undefined,\r\n          disabled: li.dataset.effectType === 'inactive',\r\n        },\r\n      ]);\r\n    case 'edit':\r\n      return effect.sheet.render(true);\r\n    case 'delete':\r\n      return effect.delete();\r\n    case 'toggle':\r\n      return effect.update({ disabled: !effect.disabled });\r\n  }\r\n}\r\n\r\n/**\r\n * Prepare the data structure for Active Effects which are currently embedded in an Actor or Item.\r\n * @param {ActiveEffect[]} effects    A collection or generator of Active Effect documents to prepare sheet data for\r\n * @return {object}                   Data for rendering\r\n */\r\nfunction prepareActiveEffectCategories(effects) {\r\n  // Define effect header categories\r\n  const categories = {\r\n    temporary: {\r\n      type: 'temporary',\r\n      label: game.i18n.localize('KAISERSCHLACHT.Effect.Temporary'),\r\n      effects: [],\r\n    },\r\n    passive: {\r\n      type: 'passive',\r\n      label: game.i18n.localize('KAISERSCHLACHT.Effect.Passive'),\r\n      effects: [],\r\n    },\r\n    inactive: {\r\n      type: 'inactive',\r\n      label: game.i18n.localize('KAISERSCHLACHT.Effect.Inactive'),\r\n      effects: [],\r\n    },\r\n    \r\n  };\r\n\r\n  // Iterate over active effects, classifying them into categories\r\n  for (let e of effects) {\r\n    if (e.disabled) categories.inactive.effects.push(e);\r\n    else if (e.isTemporary) categories.temporary.effects.push(e);\r\n    else categories.passive.effects.push(e);\r\n  }\r\n  return categories;\r\n}\n\n// import Tagify from \"@yaireo/tagify\";\r\n/**\r\n * Extend the basic ActorSheet with some very simple modifications   \r\n * @extends {ActorSheet}\r\n */\r\nclass KSActorSheet extends ActorSheet {\r\n  /** @override */\r\n  static get defaultOptions() {\r\n    return foundry.utils.mergeObject(super.defaultOptions, {\r\n      classes: ['kaiserschlacht', 'sheet', 'actor'],\r\n      width: 600,\r\n      height: 680,\r\n      tabs: [\r\n        {\r\n          navSelector: '.sheet-tabs',\r\n          contentSelector: '.sheet-body',\r\n          initial: 'actions',\r\n        },\r\n      ],\r\n    });\r\n  }\r\n\r\n  /** @override */\r\n  get template() {\r\n    return `systems/kaiserschlacht/templates/actor/actor-${this.actor.type}-sheet.hbs`;\r\n  }\r\n\r\n  /* -------------------------------------------- */\r\n\r\n  /** @override */\r\n  getData() {\r\n    // Retrieve the data structure from the base sheet. You can inspect or log\r\n    // the context variable to see the structure, but some key properties for\r\n    // sheets are the actor object, the data object, whether or not it's\r\n    // editable, the items array, and the effects array.\r\n    const context = super.getData();\r\n\r\n    // Use a safe clone of the actor data for further operations.\r\n    const actorData = context.data;\r\n\r\n    // Add the actor's data to context.data for easier access, as well as flags.\r\n    context.system = actorData.system;\r\n    context.flags = actorData.flags;\r\n\r\n    // Prepare character data and items.\r\n    if (actorData.type == 'character') {\r\n\r\n      this._prepareItems(context);\r\n      this._prepareCharacterData(context);\r\n    }\r\n\r\n    // Prepare NPC data and items.\r\n    if (actorData.type == 'npc') {\r\n      this._prepareItems(context);\r\n    }\r\n\r\n    // Add roll data for TinyMCE editors.\r\n    context.rollData = context.actor.getRollData();\r\n\r\n    // Prepare active effects\r\n    context.effects = prepareActiveEffectCategories(\r\n      // A generator that returns all effects stored on the actor\r\n      // as well as any items\r\n      this.actor.allApplicableEffects()\r\n    );\r\n\r\n    return context;\r\n  }\r\n\r\n  /**\r\n   * Organize and classify Items for Character sheets.\r\n   *\r\n   * @param {Object} actorData The actor to prepare.\r\n   *\r\n   * @return {undefined}\r\n   */\r\n  _prepareCharacterData(context) {\r\n    // Handle ability scores, skills, and class stats.\r\n    for (let [k, v] of Object.entries(context.system.abilities)) {\r\n\r\n      if (typeof v != \"object\") {\r\n        console.log(\"error rendering actor ability\");\r\n      }\r\n      else\r\n        v.label = game.i18n.localize(CONFIG.KAISERSCHLACHT.abilities[k]) ?? k;\r\n    }\r\n    for (let [k, v] of Object.entries(context.system.skills)) {\r\n      if (typeof v != \"object\") {\r\n        console.log(\"error rendering actor skill\");\r\n      }\r\n      else\r\n        v.label = game.i18n.localize(CONFIG.KAISERSCHLACHT.skills[k]) ?? k;\r\n    }\r\n    for (let [k, v] of Object.entries(context.system.classStats)) {\r\n\r\n      if (typeof v != \"object\") {\r\n        console.log(\"error rendering actor classStat\");\r\n      }\r\n      else\r\n        v.label = game.i18n.localize(CONFIG.KAISERSCHLACHT.classStats[k]) ?? k;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Organize and classify Items for Character sheets.\r\n   *\r\n   * @param {Object} actorData The actor to prepare.\r\n   *\r\n   * @return {undefined}\r\n   */\r\n  _prepareItems(context) {\r\n    // Initialize containers.\r\n    const gear = [];\r\n    const features = [];\r\n    const weapons = [];\r\n    const armor = [];\r\n    const spells = {\r\n      0: [],\r\n      1: [],\r\n      2: [],\r\n      3: [],\r\n      4: [],\r\n      5: [],\r\n      6: [],\r\n      7: [],\r\n      8: [],\r\n      9: [],\r\n    };\r\n\r\n    // Iterate through items, allocating to containers\r\n    for (let i of context.items) {\r\n      i.img = i.img || Item.DEFAULT_ICON;\r\n      // Append to gear.\r\n      if (i.type === 'item') {\r\n        gear.push(i);\r\n      }\r\n      // Append to features.\r\n      else if (i.type === 'feature') {\r\n        features.push(i);\r\n      }\r\n      // Append to spells.\r\n      else if (i.type === 'spell') {\r\n        if (i.system.spellLevel != undefined) {\r\n          spells[i.system.spellLevel].push(i);\r\n        }\r\n      }\r\n      else if (i.type === 'weapon') {\r\n        {\r\n          weapons.push(i);\r\n        }\r\n      }\r\n      else if (i.type === 'armor') {\r\n        {\r\n          armor.push(i);\r\n        }\r\n      }\r\n    }\r\n\r\n    // Assign and return\r\n    context.gear = gear;\r\n    context.features = features;\r\n    context.spells = spells;\r\n    context.weapons = weapons;\r\n    context.armor = armor;\r\n  }\r\n\r\n  /* -------------------------------------------- */\r\n\r\n  /** @override */\r\n  activateListeners(html) {\r\n    super.activateListeners(html);\r\n\r\n    // Render the item sheet for viewing/editing prior to the editable check.\r\n    html.on('click', '.item-edit', (ev) => {\r\n      const li = $(ev.currentTarget).parents('.item');\r\n      const item = this.actor.items.get(li.data('itemId'));\r\n      item.sheet.render(true);\r\n    });\r\n\r\n    // -------------------------------------------------------------\r\n    // Everything below here is only needed if the sheet is editable\r\n    if (!this.isEditable) return;\r\n\r\n    // toggle item equip\r\n    html.on('click', '.equip-toggle', (ev) => {\r\n\r\n      const li = $(ev.currentTarget).parents('.item');\r\n      const item = this.actor.items.get(li.data('itemId'));\r\n\r\n      item.equipToggle();\r\n\r\n    });\r\n\r\n    // Add Inventory Item\r\n    html.on('click', '.item-create', this._onItemCreate.bind(this));\r\n\r\n    // Delete Inventory Item\r\n    html.on('click', '.item-delete', (ev) => {\r\n      const li = $(ev.currentTarget).parents('.item');\r\n      const item = this.actor.items.get(li.data('itemId'));\r\n      item.delete();\r\n      li.slideUp(200, () => this.render(false));\r\n    });\r\n\r\n    // Active Effect management\r\n    html.on('click', '.effect-control', (ev) => {\r\n      const row = ev.currentTarget.closest('li');\r\n      const document =\r\n        row.dataset.parentId === this.actor.id\r\n          ? this.actor\r\n          : this.actor.items.get(row.dataset.parentId);\r\n      onManageActiveEffect(ev, document);\r\n    });\r\n\r\n    // Rollable abilities.\r\n    html.on('click', '.rollable', this._onRoll.bind(this));\r\n    // Damage application from the button.\r\n    html.on('click', '.apply-damage-button', this._onClickApplyDamage.bind(this));\r\n    // Drag events for macros.\r\n    if (this.actor.isOwner) {\r\n      let handler = (ev) => this._onDragStart(ev);\r\n      html.find('li.item').each((i, li) => {\r\n        if (li.classList.contains('inventory-header')) return;\r\n        li.setAttribute('draggable', true);\r\n        li.addEventListener('dragstart', handler, false);\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handle creating a new Owned Item for the actor using initial data defined in the HTML dataset\r\n   * @param {Event} event   The originating click event\r\n   * @private\r\n   */\r\n  async _onItemCreate(event) {\r\n    event.preventDefault();\r\n    const header = event.currentTarget;\r\n    // Get the type of item to create.\r\n    const type = header.dataset.type;\r\n    // Grab any data associated with this control.\r\n    const data = duplicate(header.dataset);\r\n    // Initialize a default name.\r\n    const name = `New ${type.capitalize()}`;\r\n    // Prepare the item object.\r\n    const itemData = {\r\n      name: name,\r\n      type: type,\r\n      system: data,\r\n    };\r\n    // Remove the type from the dataset since it's in the itemData.type prop.\r\n    delete itemData.system['type'];\r\n\r\n    // Finally, create the item!\r\n    return await Item.create(itemData, { parent: this.actor });\r\n  }\r\n\r\n  /**\r\n   * Handle clickable rolls.\r\n   * @param {Event} event   The originating click event\r\n   * @private\r\n   */\r\n  async _onRoll(event) {\r\n    event.preventDefault();\r\n    const element = event.currentTarget;\r\n    const dataset = element.dataset;\r\n    let label = dataset.label ? `${dataset.label}` : '';\r\n\r\n    // Handle item rolls.\r\n    if (dataset.rollType) {\r\n      if (dataset.rollType == 'item') {\r\n        const itemId = element.closest('.item').dataset.itemId;\r\n        const item = this.actor.items.get(itemId);\r\n        if (item) return item.roll();\r\n      }\r\n      else if (dataset.rollType == 'attack') {\r\n        const itemId = element.closest('.item').dataset.itemId;\r\n        const item = this.actor.items.get(itemId);\r\n        if (item) return item.attackRoll();\r\n      }\r\n      else if (dataset.rollType == 'reload') {\r\n        const itemId = element.closest('.item').dataset.itemId;\r\n        const item = this.actor.items.get(itemId);\r\n        if (item) return item.roll();\r\n      }\r\n      else if (dataset.rollType == 'diff') {\r\n        const amendedFormula = await diffDialog(dataset.roll);\r\n        let roll = new KSRoll(amendedFormula, this.actor.getRollData(), {});\r\n        roll.toMessage({\r\n          speaker: ChatMessage.getSpeaker({ actor: this.actor }),\r\n          flavor: label,\r\n          rollMode: game.settings.get('core', 'rollMode'),\r\n        });\r\n        return roll;\r\n      }\r\n    }\r\n    else if (dataset.roll) {\r\n      let roll = new KSRoll(dataset.roll, this.actor.getRollData());\r\n      roll.toMessage({\r\n        speaker: ChatMessage.getSpeaker({ actor: this.actor }),\r\n        flavor: label,\r\n        rollMode: game.settings.get('core', 'rollMode'),\r\n      });\r\n      return roll;\r\n    }\r\n  }\r\n  _onClickApplyDamage(event) {\r\n    event.preventDefault();\r\n    const a = event.currentTarget;\r\n    let dataset = a.dataset;\r\n    const targetTokens = canvas.tokens.controlled;\r\n    for (let token of targetTokens) {\r\n      token.actor._applyDamage(dataset.damage, dataset.damageTags);\r\n    }\r\n\r\n  }\r\n}\n\nvar commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\nfunction getDefaultExportFromCjs (x) {\n\treturn x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;\n}\n\nvar tagify_min = {exports: {}};\n\n/*\nTagify v4.23.0 - tags input component\nBy: Yair Even-Or <vsync.design@gmail.com>\nhttps://github.com/yairEO/tagify\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\r\nof this software and associated documentation files (the \"Software\"), to deal\r\nin the Software without restriction, including without limitation the rights\r\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\ncopies of the Software, and to permit persons to whom the Software is\r\nfurnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in\r\nall copies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\nTHE SOFTWARE.\r\n\r\nThis Software may not be rebranded and sold as a library under any other name\r\nother than \"Tagify\" (by owner) or as part of another library.\n*/\n\n(function (module, exports) {\n\t!function(t,e){module.exports=e();}(commonjsGlobal,(function(){var t=\"&#8203;\";function e(t,e){(null==e||e>t.length)&&(e=t.length);for(var i=0,n=new Array(e);i<e;i++)n[i]=t[i];return n}function i(t){return function(t){if(Array.isArray(t))return e(t)}(t)||function(t){if(\"undefined\"!=typeof Symbol&&null!=t[Symbol.iterator]||null!=t[\"@@iterator\"])return Array.from(t)}(t)||function(t,i){if(!t)return;if(\"string\"==typeof t)return e(t,i);var n=Object.prototype.toString.call(t).slice(8,-1);\"Object\"===n&&t.constructor&&(n=t.constructor.name);if(\"Map\"===n||\"Set\"===n)return Array.from(n);if(\"Arguments\"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return e(t,i)}(t)||function(){throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}()}var n={isEnabled:function(){var t;return null===(t=window.TAGIFY_DEBUG)||void 0===t||t},log:function(){for(var t=arguments.length,e=new Array(t),n=0;n<t;n++)e[n]=arguments[n];var s;this.isEnabled()&&(s=console).log.apply(s,[\"[Tagify]:\"].concat(i(e)));},warn:function(){for(var t=arguments.length,e=new Array(t),n=0;n<t;n++)e[n]=arguments[n];var s;this.isEnabled()&&(s=console).warn.apply(s,[\"[Tagify]:\"].concat(i(e)));}},s=function(t,e,i,n){return t=\"\"+t,e=\"\"+e,n&&(t=t.trim(),e=e.trim()),i?t==e:t.toLowerCase()==e.toLowerCase()},a=function(t,e){return t&&Array.isArray(t)&&t.map((function(t){return o(t,e)}))};function o(t,e){var i,n={};for(i in t)e.indexOf(i)<0&&(n[i]=t[i]);return n}function r(t){var e=document.createElement(\"div\");return t.replace(/\\&#?[0-9a-z]+;/gi,(function(t){return e.innerHTML=t,e.innerText}))}function l(t){return (new DOMParser).parseFromString(t.trim(),\"text/html\").body.firstElementChild}function d(t,e){for(e=e||\"previous\";t=t[e+\"Sibling\"];)if(3==t.nodeType)return t}function c(t){return \"string\"==typeof t?t.replace(/&/g,\"&amp;\").replace(/</g,\"&lt;\").replace(/>/g,\"&gt;\").replace(/\"/g,\"&quot;\").replace(/`|'/g,\"&#039;\"):t}function u(t){var e=Object.prototype.toString.call(t).split(\" \")[1].slice(0,-1);return t===Object(t)&&\"Array\"!=e&&\"Function\"!=e&&\"RegExp\"!=e&&\"HTMLUnknownElement\"!=e}function g(t,e,i){var n,s;function a(t,e){for(var i in e)if(e.hasOwnProperty(i)){if(u(e[i])){u(t[i])?a(t[i],e[i]):t[i]=Object.assign({},e[i]);continue}if(Array.isArray(e[i])){t[i]=Object.assign([],e[i]);continue}t[i]=e[i];}}return n=t,(null!=(s=Object)&&\"undefined\"!=typeof Symbol&&s[Symbol.hasInstance]?s[Symbol.hasInstance](n):n instanceof s)||(t={}),a(t,e),i&&a(t,i),t}function h(){var t=[],e={},i=!0,n=!1,s=void 0;try{for(var a,o=arguments[Symbol.iterator]();!(i=(a=o.next()).done);i=!0){var r=a.value,l=!0,d=!1,c=void 0;try{for(var g,h=r[Symbol.iterator]();!(l=(g=h.next()).done);l=!0){var p=g.value;u(p)?e[p.value]||(t.push(p),e[p.value]=1):t.includes(p)||t.push(p);}}catch(t){d=!0,c=t;}finally{try{l||null==h.return||h.return();}finally{if(d)throw c}}}}catch(t){n=!0,s=t;}finally{try{i||null==o.return||o.return();}finally{if(n)throw s}}return t}function p(t){return String.prototype.normalize?\"string\"==typeof t?t.normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g,\"\"):void 0:t}var f=function(){return /(?=.*chrome)(?=.*android)/i.test(navigator.userAgent)};function m(){return ([1e7]+-1e3+-4e3+-8e3+-1e11).replace(/[018]/g,(function(t){return (t^crypto.getRandomValues(new Uint8Array(1))[0]&15>>t/4).toString(16)}))}function v(t){return t&&t.classList&&t.classList.contains(this.settings.classNames.tag)}function b(t){return t&&t.closest(this.settings.classNames.tagSelector)}function w(t,e){var i=window.getSelection();return e=e||i.getRangeAt(0),\"string\"==typeof t&&(t=document.createTextNode(t)),e&&(e.deleteContents(),e.insertNode(t)),t}function y(t,e,i){return t?(e&&(t.__tagifyTagData=i?e:g({},t.__tagifyTagData||{},e)),t.__tagifyTagData):(n.warn(\"tag element doesn't exist\",{tagElm:t,data:e}),e)}function T(t){if(t&&t.parentNode){var e=t,i=window.getSelection(),n=i.getRangeAt(0);i.rangeCount&&(n.setStartAfter(e),n.collapse(!0),i.removeAllRanges(),i.addRange(n));}}function O(t,e){t.forEach((function(t){if(y(t.previousSibling)||!t.previousSibling){var i=document.createTextNode(\"​\");t.before(i),e&&T(i);}}));}var x={delimiters:\",\",pattern:null,tagTextProp:\"value\",maxTags:1/0,callbacks:{},addTagOnBlur:!0,addTagOn:[\"blur\",\"tab\",\"enter\"],onChangeAfterBlur:!0,duplicates:!1,whitelist:[],blacklist:[],enforceWhitelist:!1,userInput:!0,keepInvalidTags:!1,createInvalidTags:!0,mixTagsAllowedAfter:/,|\\.|\\:|\\s/,mixTagsInterpolator:[\"[[\",\"]]\"],backspace:!0,skipInvalid:!1,pasteAsTags:!0,editTags:{clicks:2,keepInvalid:!0},transformTag:function(){},trim:!0,a11y:{focusableTags:!1},mixMode:{insertAfterTag:\" \"},autoComplete:{enabled:!0,rightKey:!1,tabKey:!1},classNames:{namespace:\"tagify\",mixMode:\"tagify--mix\",selectMode:\"tagify--select\",input:\"tagify__input\",focus:\"tagify--focus\",tagNoAnimation:\"tagify--noAnim\",tagInvalid:\"tagify--invalid\",tagNotAllowed:\"tagify--notAllowed\",scopeLoading:\"tagify--loading\",hasMaxTags:\"tagify--hasMaxTags\",hasNoTags:\"tagify--noTags\",empty:\"tagify--empty\",inputInvalid:\"tagify__input--invalid\",dropdown:\"tagify__dropdown\",dropdownWrapper:\"tagify__dropdown__wrapper\",dropdownHeader:\"tagify__dropdown__header\",dropdownFooter:\"tagify__dropdown__footer\",dropdownItem:\"tagify__dropdown__item\",dropdownItemActive:\"tagify__dropdown__item--active\",dropdownItemHidden:\"tagify__dropdown__item--hidden\",dropdownInital:\"tagify__dropdown--initial\",tag:\"tagify__tag\",tagText:\"tagify__tag-text\",tagX:\"tagify__tag__removeBtn\",tagLoading:\"tagify__tag--loading\",tagEditing:\"tagify__tag--editable\",tagFlash:\"tagify__tag--flash\",tagHide:\"tagify__tag--hide\"},dropdown:{classname:\"\",enabled:2,maxItems:10,searchKeys:[\"value\",\"searchBy\"],fuzzySearch:!0,caseSensitive:!1,accentedSearch:!0,includeSelectedTags:!1,escapeHTML:!0,highlightFirst:!0,closeOnSelect:!0,clearOnSelect:!0,position:\"all\",appendTarget:null},hooks:{beforeRemoveTag:function(){return Promise.resolve()},beforePaste:function(){return Promise.resolve()},suggestionClick:function(){return Promise.resolve()},beforeKeyDown:function(){return Promise.resolve()}}};function D(t,e,i){return e in t?Object.defineProperty(t,e,{value:i,enumerable:!0,configurable:!0,writable:!0}):t[e]=i,t}function S(t){for(var e=1;e<arguments.length;e++){var i=null!=arguments[e]?arguments[e]:{},n=Object.keys(i);\"function\"==typeof Object.getOwnPropertySymbols&&(n=n.concat(Object.getOwnPropertySymbols(i).filter((function(t){return Object.getOwnPropertyDescriptor(i,t).enumerable})))),n.forEach((function(e){D(t,e,i[e]);}));}return t}function I(t,e){return e=null!=e?e:{},Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(e)):function(t,e){var i=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),i.push.apply(i,n);}return i}(Object(e)).forEach((function(i){Object.defineProperty(t,i,Object.getOwnPropertyDescriptor(e,i));})),t}var M={events:{binding:function(){var t=!(arguments.length>0&&void 0!==arguments[0])||arguments[0],e=this.dropdown.events.callbacks,i=this.listeners.dropdown=this.listeners.dropdown||{position:this.dropdown.position.bind(this,null),onKeyDown:e.onKeyDown.bind(this),onMouseOver:e.onMouseOver.bind(this),onMouseLeave:e.onMouseLeave.bind(this),onClick:e.onClick.bind(this),onScroll:e.onScroll.bind(this)},n=t?\"addEventListener\":\"removeEventListener\";\"manual\"!=this.settings.dropdown.position&&(document[n](\"scroll\",i.position,!0),window[n](\"resize\",i.position),window[n](\"keydown\",i.onKeyDown)),this.DOM.dropdown[n](\"mouseover\",i.onMouseOver),this.DOM.dropdown[n](\"mouseleave\",i.onMouseLeave),this.DOM.dropdown[n](\"mousedown\",i.onClick),this.DOM.dropdown.content[n](\"scroll\",i.onScroll);},callbacks:{onKeyDown:function(t){var e=this;if(this.state.hasFocus&&!this.state.composing){var i=this.settings,s=this.DOM.dropdown.querySelector(i.classNames.dropdownItemActiveSelector),a=this.dropdown.getSuggestionDataByNode(s),o=\"mix\"==i.mode,r=\"select\"==i.mode;i.hooks.beforeKeyDown(t,{tagify:this}).then((function(l){switch(t.key){case\"ArrowDown\":case\"ArrowUp\":case\"Down\":case\"Up\":t.preventDefault();var d=e.dropdown.getAllSuggestionsRefs(),c=\"ArrowUp\"==t.key||\"Up\"==t.key;s&&(s=e.dropdown.getNextOrPrevOption(s,!c)),s&&s.matches(i.classNames.dropdownItemSelector)||(s=d[c?d.length-1:0]),e.dropdown.highlightOption(s,!0);break;case\"Escape\":case\"Esc\":e.dropdown.hide();break;case\"ArrowRight\":if(e.state.actions.ArrowLeft)return;case\"Tab\":var u=!i.autoComplete.rightKey||!i.autoComplete.tabKey;if(!o&&!r&&s&&u&&!e.state.editing){t.preventDefault();var g=e.dropdown.getMappedValue(a);return e.input.autocomplete.set.call(e,g),!1}return !0;case\"Enter\":t.preventDefault(),i.hooks.suggestionClick(t,{tagify:e,tagData:a,suggestionElm:s}).then((function(){if(s)return e.dropdown.selectOption(s),s=e.dropdown.getNextOrPrevOption(s,!c),void e.dropdown.highlightOption(s);e.dropdown.hide(),o||e.addTags(e.state.inputText.trim(),!0);})).catch((function(t){return n.warn(t)}));break;case\"Backspace\":if(o||e.state.editing.scope)return;var h=e.input.raw.call(e);\"\"!=h&&8203!=h.charCodeAt(0)||(!0===i.backspace?e.removeTags():\"edit\"==i.backspace&&setTimeout(e.editTag.bind(e),0));}}));}},onMouseOver:function(t){var e=t.target.closest(this.settings.classNames.dropdownItemSelector);this.dropdown.highlightOption(e);},onMouseLeave:function(t){this.dropdown.highlightOption();},onClick:function(t){var e=this;if(0==t.button&&t.target!=this.DOM.dropdown&&t.target!=this.DOM.dropdown.content){var i=t.target.closest(this.settings.classNames.dropdownItemSelector),s=this.dropdown.getSuggestionDataByNode(i);this.state.actions.selectOption=!0,setTimeout((function(){return e.state.actions.selectOption=!1}),50),this.settings.hooks.suggestionClick(t,{tagify:this,tagData:s,suggestionElm:i}).then((function(){i?e.dropdown.selectOption(i,t):e.dropdown.hide();})).catch((function(t){return n.warn(t)}));}},onScroll:function(t){var e=t.target,i=e.scrollTop/(e.scrollHeight-e.parentNode.clientHeight)*100;this.trigger(\"dropdown:scroll\",{percentage:Math.round(i)});}}},refilter:function(t){t=t||this.state.dropdown.query||\"\",this.suggestedListItems=this.dropdown.filterListItems(t),this.dropdown.fill(),this.suggestedListItems.length||this.dropdown.hide(),this.trigger(\"dropdown:updated\",this.DOM.dropdown);},getSuggestionDataByNode:function(t){var e=t&&t.getAttribute(\"value\");return this.suggestedListItems.find((function(t){return t.value==e}))||null},getNextOrPrevOption:function(t){var e=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],i=this.dropdown.getAllSuggestionsRefs(),n=i.findIndex((function(e){return e===t}));return e?i[n+1]:i[n-1]},highlightOption:function(t,e){var i,n=this.settings.classNames.dropdownItemActive;if(this.state.ddItemElm&&(this.state.ddItemElm.classList.remove(n),this.state.ddItemElm.removeAttribute(\"aria-selected\")),!t)return this.state.ddItemData=null,this.state.ddItemElm=null,void this.input.autocomplete.suggest.call(this);i=this.dropdown.getSuggestionDataByNode(t),this.state.ddItemData=i,this.state.ddItemElm=t,t.classList.add(n),t.setAttribute(\"aria-selected\",!0),e&&(t.parentNode.scrollTop=t.clientHeight+t.offsetTop-t.parentNode.clientHeight),this.settings.autoComplete&&(this.input.autocomplete.suggest.call(this,i),this.dropdown.position());},selectOption:function(t,e){var i=this,n=this.settings,s=n.dropdown,a=s.clearOnSelect,o=s.closeOnSelect;if(!t)return this.addTags(this.state.inputText,!0),void(o&&this.dropdown.hide());e=e||{};var r=t.getAttribute(\"value\"),l=\"noMatch\"==r,d=\"mix\"==n.mode,c=this.suggestedListItems.find((function(t){var e;return (null!==(e=t.value)&&void 0!==e?e:t)==r}));if(this.trigger(\"dropdown:select\",{data:c,elm:t,event:e}),r&&(c||l)){if(this.state.editing){var u=this.normalizeTags([c])[0];c=n.transformTag.call(this,u)||u,this.onEditTagDone(null,g({__isValid:!0},c));}else this[d?\"addMixTags\":\"addTags\"]([c||this.input.raw.call(this)],a);(d||this.DOM.input.parentNode)&&(setTimeout((function(){i.DOM.input.focus(),i.toggleFocusClass(!0);})),o&&setTimeout(this.dropdown.hide.bind(this)),t.addEventListener(\"transitionend\",(function(){i.dropdown.fillHeaderFooter(),setTimeout((function(){return t.remove()}),100);}),{once:!0}),t.classList.add(this.settings.classNames.dropdownItemHidden));}else o&&setTimeout(this.dropdown.hide.bind(this));},selectAll:function(t){this.suggestedListItems.length=0,this.dropdown.hide(),this.dropdown.filterListItems(\"\");var e=this.dropdown.filterListItems(\"\");return t||(e=this.state.dropdown.suggestions),this.addTags(e,!0),this},filterListItems:function(t,e){var i,n,s,a,o,r,l=function(){var t,l,d=void 0,c=void 0;t=m[w],n=(null!=(l=Object)&&\"undefined\"!=typeof Symbol&&l[Symbol.hasInstance]?l[Symbol.hasInstance](t):t instanceof l)?m[w]:{value:m[w]};var v,y=!Object.keys(n).some((function(t){return b.includes(t)}))?[\"value\"]:b;g.fuzzySearch&&!e.exact?(a=y.reduce((function(t,e){return t+\" \"+(n[e]||\"\")}),\"\").toLowerCase().trim(),g.accentedSearch&&(a=p(a),r=p(r)),d=0==a.indexOf(r),c=a===r,v=a,s=r.toLowerCase().split(\" \").every((function(t){return v.includes(t.toLowerCase())}))):(d=!0,s=y.some((function(t){var i=\"\"+(n[t]||\"\");return g.accentedSearch&&(i=p(i),r=p(r)),g.caseSensitive||(i=i.toLowerCase()),c=i===r,e.exact?i===r:0==i.indexOf(r)}))),o=!g.includeSelectedTags&&i.isTagDuplicate(u(n)?n.value:n),s&&!o&&(c&&d?f.push(n):\"startsWith\"==g.sortby&&d?h.unshift(n):h.push(n));},d=this,c=this.settings,g=c.dropdown,h=(e=e||{},[]),f=[],m=c.whitelist,v=g.maxItems>=0?g.maxItems:1/0,b=g.searchKeys,w=0;if(!(t=\"select\"==c.mode&&this.value.length&&this.value[0][c.tagTextProp]==t?\"\":t)||!b.length)return h=g.includeSelectedTags?m:m.filter((function(t){return !d.isTagDuplicate(u(t)?t.value:t)})),this.state.dropdown.suggestions=h,h.slice(0,v);for(r=g.caseSensitive?\"\"+t:(\"\"+t).toLowerCase();w<m.length;w++)i=this,l();return this.state.dropdown.suggestions=f.concat(h),\"function\"==typeof g.sortby?g.sortby(f.concat(h),r):f.concat(h).slice(0,v)},getMappedValue:function(t){var e=this.settings.dropdown.mapValueTo;return e?\"function\"==typeof e?e(t):t[e]||t.value:t.value},createListHTML:function(t){var e=this;return g([],t).map((function(t,i){\"string\"!=typeof t&&\"number\"!=typeof t||(t={value:t});var n=e.dropdown.getMappedValue(t);return n=\"string\"==typeof n&&e.settings.dropdown.escapeHTML?c(n):n,e.settings.templates.dropdownItem.apply(e,[I(S({},t),{mappedValue:n}),e])})).join(\"\")}};function N(t,e){(null==e||e>t.length)&&(e=t.length);for(var i=0,n=new Array(e);i<e;i++)n[i]=t[i];return n}function E(t,e,i){return e in t?Object.defineProperty(t,e,{value:i,enumerable:!0,configurable:!0,writable:!0}):t[e]=i,t}function _(t){return function(t){if(Array.isArray(t))return N(t)}(t)||function(t){if(\"undefined\"!=typeof Symbol&&null!=t[Symbol.iterator]||null!=t[\"@@iterator\"])return Array.from(t)}(t)||function(t,e){if(!t)return;if(\"string\"==typeof t)return N(t,e);var i=Object.prototype.toString.call(t).slice(8,-1);\"Object\"===i&&t.constructor&&(i=t.constructor.name);if(\"Map\"===i||\"Set\"===i)return Array.from(i);if(\"Arguments\"===i||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(i))return N(t,e)}(t)||function(){throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}()}function C(){for(var t in this.dropdown={},this._dropdown)this.dropdown[t]=\"function\"==typeof this._dropdown[t]?this._dropdown[t].bind(this):this._dropdown[t];this.dropdown.refs();}var A,k,L,P=(A=function(t){for(var e=1;e<arguments.length;e++){var i=null!=arguments[e]?arguments[e]:{},n=Object.keys(i);\"function\"==typeof Object.getOwnPropertySymbols&&(n=n.concat(Object.getOwnPropertySymbols(i).filter((function(t){return Object.getOwnPropertyDescriptor(i,t).enumerable})))),n.forEach((function(e){E(t,e,i[e]);}));}return t}({},M),k=null!=(k={refs:function(){this.DOM.dropdown=this.parseTemplate(\"dropdown\",[this.settings]),this.DOM.dropdown.content=this.DOM.dropdown.querySelector(\"[data-selector='tagify-suggestions-wrapper']\");},getHeaderRef:function(){return this.DOM.dropdown.querySelector(\"[data-selector='tagify-suggestions-header']\")},getFooterRef:function(){return this.DOM.dropdown.querySelector(\"[data-selector='tagify-suggestions-footer']\")},getAllSuggestionsRefs:function(){return _(this.DOM.dropdown.content.querySelectorAll(this.settings.classNames.dropdownItemSelector))},show:function(t){var e,i,n,a=this,o=this.settings,r=\"mix\"==o.mode&&!o.enforceWhitelist,l=!o.whitelist||!o.whitelist.length,d=\"manual\"==o.dropdown.position;if(t=void 0===t?this.state.inputText:t,!(l&&!r&&!o.templates.dropdownItemNoMatch||!1===o.dropdown.enable||this.state.isLoading||this.settings.readonly)){if(clearTimeout(this.dropdownHide__bindEventsTimeout),this.suggestedListItems=this.dropdown.filterListItems(t),t&&!this.suggestedListItems.length&&(this.trigger(\"dropdown:noMatch\",t),o.templates.dropdownItemNoMatch&&(n=o.templates.dropdownItemNoMatch.call(this,{value:t}))),!n){if(this.suggestedListItems.length)t&&r&&!this.state.editing.scope&&!s(this.suggestedListItems[0].value,t)&&this.suggestedListItems.unshift({value:t});else {if(!t||!r||this.state.editing.scope)return this.input.autocomplete.suggest.call(this),void this.dropdown.hide();this.suggestedListItems=[{value:t}];}i=\"\"+(u(e=this.suggestedListItems[0])?e.value:e),o.autoComplete&&i&&0==i.indexOf(t)&&this.input.autocomplete.suggest.call(this,e);}this.dropdown.fill(n),o.dropdown.highlightFirst&&this.dropdown.highlightOption(this.DOM.dropdown.content.querySelector(o.classNames.dropdownItemSelector)),this.state.dropdown.visible||setTimeout(this.dropdown.events.binding.bind(this)),this.state.dropdown.visible=t||!0,this.state.dropdown.query=t,this.setStateSelection(),d||setTimeout((function(){a.dropdown.position(),a.dropdown.render();})),setTimeout((function(){a.trigger(\"dropdown:show\",a.DOM.dropdown);}));}},hide:function(t){var e=this,i=this.DOM,n=i.scope,s=i.dropdown,a=\"manual\"==this.settings.dropdown.position&&!t;if(s&&document.body.contains(s)&&!a)return window.removeEventListener(\"resize\",this.dropdown.position),this.dropdown.events.binding.call(this,!1),n.setAttribute(\"aria-expanded\",!1),s.parentNode.removeChild(s),setTimeout((function(){e.state.dropdown.visible=!1;}),100),this.state.dropdown.query=this.state.ddItemData=this.state.ddItemElm=this.state.selection=null,this.state.tag&&this.state.tag.value.length&&(this.state.flaggedTags[this.state.tag.baseOffset]=this.state.tag),this.trigger(\"dropdown:hide\",s),this},toggle:function(t){this.dropdown[this.state.dropdown.visible&&!t?\"hide\":\"show\"]();},getAppendTarget:function(){var t=this.settings.dropdown;return \"function\"==typeof t.appendTarget?t.appendTarget():t.appendTarget},render:function(){var t,e,i,n=this,s=(t=this.DOM.dropdown,(i=t.cloneNode(!0)).style.cssText=\"position:fixed; top:-9999px; opacity:0\",document.body.appendChild(i),e=i.clientHeight,i.parentNode.removeChild(i),e),a=this.settings,o=\"number\"==typeof a.dropdown.enabled&&a.dropdown.enabled>=0,r=this.dropdown.getAppendTarget();return o?(this.DOM.scope.setAttribute(\"aria-expanded\",!0),document.body.contains(this.DOM.dropdown)||(this.DOM.dropdown.classList.add(a.classNames.dropdownInital),this.dropdown.position(s),r.appendChild(this.DOM.dropdown),setTimeout((function(){return n.DOM.dropdown.classList.remove(a.classNames.dropdownInital)}))),this):this},fill:function(t){t=\"string\"==typeof t?t:this.dropdown.createListHTML(t||this.suggestedListItems);var e,i=this.settings.templates.dropdownContent.call(this,t);this.DOM.dropdown.content.innerHTML=(e=i)?e.replace(/\\>[\\r\\n ]+\\</g,\"><\").split(/>\\s+</).join(\"><\").trim():\"\";},fillHeaderFooter:function(){var t=this.dropdown.filterListItems(this.state.dropdown.query),e=this.parseTemplate(\"dropdownHeader\",[t]),i=this.parseTemplate(\"dropdownFooter\",[t]),n=this.dropdown.getHeaderRef(),s=this.dropdown.getFooterRef();e&&(null==n||n.parentNode.replaceChild(e,n)),i&&(null==s||s.parentNode.replaceChild(i,s));},position:function(t){var e=this.settings.dropdown,i=this.dropdown.getAppendTarget();if(\"manual\"!=e.position&&i){var n,s,a,o,r,l,d,c,u,g=this.DOM.dropdown,h=e.RTL,p=i===document.body,f=i===this.DOM.scope,m=p?window.pageYOffset:i.scrollTop,v=document.fullscreenElement||document.webkitFullscreenElement||document.documentElement,b=v.clientHeight,w=Math.max(v.clientWidth||0,window.innerWidth||0)>480?e.position:\"all\",y=this.DOM[\"input\"==w?\"input\":\"scope\"];if(t=t||g.clientHeight,this.state.dropdown.visible){if(\"text\"==w?(a=(n=function(){var t=document.getSelection();if(t.rangeCount){var e,i,n=t.getRangeAt(0),s=n.startContainer,a=n.startOffset;if(a>0)return (i=document.createRange()).setStart(s,a-1),i.setEnd(s,a),{left:(e=i.getBoundingClientRect()).right,top:e.top,bottom:e.bottom};if(s.getBoundingClientRect)return s.getBoundingClientRect()}return {left:-9999,top:-9999}}()).bottom,s=n.top,o=n.left,r=\"auto\"):(l=function(t){var e=0,i=0;for(t=t.parentNode;t&&t!=v;)e+=t.offsetTop||0,i+=t.offsetLeft||0,t=t.parentNode;return {top:e,left:i}}(i),n=y.getBoundingClientRect(),s=f?-1:n.top-l.top,a=(f?n.height:n.bottom-l.top)-1,o=f?-1:n.left-l.left,r=n.width+\"px\"),!p){var T=function(){for(var t=0,i=e.appendTarget.parentNode;i;)t+=i.scrollTop||0,i=i.parentNode;return t}();s+=T,a+=T;}var O;s=Math.floor(s),a=Math.ceil(a),c=((d=null!==(O=e.placeAbove)&&void 0!==O?O:b-n.bottom<t)?s:a)+m,u=\"left: \".concat(o+(h&&n.width||0)+window.pageXOffset,\"px;\"),g.style.cssText=\"\".concat(u,\"; top: \").concat(c,\"px; min-width: \").concat(r,\"; max-width: \").concat(r),g.setAttribute(\"placement\",d?\"top\":\"bottom\"),g.setAttribute(\"position\",w);}}}})?k:{},Object.getOwnPropertyDescriptors?Object.defineProperties(A,Object.getOwnPropertyDescriptors(k)):function(t,e){var i=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),i.push.apply(i,n);}return i}(Object(k)).forEach((function(t){Object.defineProperty(A,t,Object.getOwnPropertyDescriptor(k,t));})),A),j=\"@yaireo/tagify/\",V={empty:\"empty\",exceed:\"number of tags exceeded\",pattern:\"pattern mismatch\",duplicate:\"already exists\",notAllowed:\"not allowed\"},R={wrapper:function(e,i){return '<tags class=\"'.concat(i.classNames.namespace,\" \").concat(i.mode?\"\".concat(i.classNames[i.mode+\"Mode\"]):\"\",\" \").concat(e.className,'\"\\n                    ').concat(i.readonly?\"readonly\":\"\",\"\\n                    \").concat(i.disabled?\"disabled\":\"\",\"\\n                    \").concat(i.required?\"required\":\"\",\"\\n                    \").concat(\"select\"===i.mode?\"spellcheck='false'\":\"\",'\\n                    tabIndex=\"-1\">\\n            <span ').concat(!i.readonly&&i.userInput?\"contenteditable\":\"\",' tabIndex=\"0\" data-placeholder=\"').concat(i.placeholder||t,'\" aria-placeholder=\"').concat(i.placeholder||\"\",'\"\\n                class=\"').concat(i.classNames.input,'\"\\n                role=\"textbox\"\\n                aria-autocomplete=\"both\"\\n                aria-multiline=\"').concat(\"mix\"==i.mode,'\"></span>\\n                ').concat(t,\"\\n        </tags>\")},tag:function(t,e){var i=e.settings;return '<tag title=\"'.concat(t.title||t.value,\"\\\"\\n                    contenteditable='false'\\n                    spellcheck='false'\\n                    tabIndex=\\\"\").concat(i.a11y.focusableTags?0:-1,'\"\\n                    class=\"').concat(i.classNames.tag,\" \").concat(t.class||\"\",'\"\\n                    ').concat(this.getAttributes(t),\">\\n            <x title='' tabIndex=\\\"\").concat(i.a11y.focusableTags?0:-1,'\" class=\"').concat(i.classNames.tagX,\"\\\" role='button' aria-label='remove tag'></x>\\n            <div>\\n                <span \").concat(\"select\"===i.mode&&i.userInput?\"contenteditable='true'\":\"\",' class=\"').concat(i.classNames.tagText,'\">').concat(t[i.tagTextProp]||t.value,\"</span>\\n            </div>\\n        </tag>\")},dropdown:function(t){var e=t.dropdown,i=\"manual\"==e.position;return '<div class=\"'.concat(i?\"\":t.classNames.dropdown,\" \").concat(e.classname,'\" role=\"listbox\" aria-labelledby=\"dropdown\" dir=\"').concat(e.RTL?\"rtl\":\"\",\"\\\">\\n                    <div data-selector='tagify-suggestions-wrapper' class=\\\"\").concat(t.classNames.dropdownWrapper,'\"></div>\\n                </div>')},dropdownContent:function(t){var e=this.settings.templates,i=this.state.dropdown.suggestions;return \"\\n            \".concat(e.dropdownHeader.call(this,i),\"\\n            \").concat(t,\"\\n            \").concat(e.dropdownFooter.call(this,i),\"\\n        \")},dropdownItem:function(t){return \"<div \".concat(this.getAttributes(t),\"\\n                    class='\").concat(this.settings.classNames.dropdownItem,\" \").concat(t.class||\"\",'\\'\\n                    tabindex=\"0\"\\n                    role=\"option\">').concat(t.mappedValue||t.value,\"</div>\")},dropdownHeader:function(t){return \"<header data-selector='tagify-suggestions-header' class=\\\"\".concat(this.settings.classNames.dropdownHeader,'\"></header>')},dropdownFooter:function(t){var e=t.length-this.settings.dropdown.maxItems;return e>0?\"<footer data-selector='tagify-suggestions-footer' class=\\\"\".concat(this.settings.classNames.dropdownFooter,'\">\\n                ').concat(e,\" more items. Refine your search.\\n            </footer>\"):\"\"},dropdownItemNoMatch:null};function F(t,e){return null!=e&&\"undefined\"!=typeof Symbol&&e[Symbol.hasInstance]?!!e[Symbol.hasInstance](t):t instanceof e}function H(t,e){(null==e||e>t.length)&&(e=t.length);for(var i=0,n=new Array(e);i<e;i++)n[i]=t[i];return n}function B(t,e,i){return e in t?Object.defineProperty(t,e,{value:i,enumerable:!0,configurable:!0,writable:!0}):t[e]=i,t}function W(t,e){return null!=e&&\"undefined\"!=typeof Symbol&&e[Symbol.hasInstance]?!!e[Symbol.hasInstance](t):t instanceof e}function q(t,e){return e=null!=e?e:{},Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(e)):function(t,e){var i=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),i.push.apply(i,n);}return i}(Object(e)).forEach((function(i){Object.defineProperty(t,i,Object.getOwnPropertyDescriptor(e,i));})),t}function K(t){return function(t){if(Array.isArray(t))return H(t)}(t)||function(t){if(\"undefined\"!=typeof Symbol&&null!=t[Symbol.iterator]||null!=t[\"@@iterator\"])return Array.from(t)}(t)||function(t,e){if(!t)return;if(\"string\"==typeof t)return H(t,e);var i=Object.prototype.toString.call(t).slice(8,-1);\"Object\"===i&&t.constructor&&(i=t.constructor.name);if(\"Map\"===i||\"Set\"===i)return Array.from(i);if(\"Arguments\"===i||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(i))return H(t,e)}(t)||function(){throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}()}var U={customBinding:function(){var t=this;this.customEventsList.forEach((function(e){t.on(e,t.settings.callbacks[e]);}));},binding:function(){var t,e=!(arguments.length>0&&void 0!==arguments[0])||arguments[0],i=this.settings,n=this.events.callbacks,s=e?\"addEventListener\":\"removeEventListener\";if(!this.state.mainEvents||!e){for(var a in this.state.mainEvents=e,e&&!this.listeners.main&&(this.events.bindGlobal.call(this),this.settings.isJQueryPlugin&&jQuery(this.DOM.originalInput).on(\"tagify.removeAllTags\",this.removeAllTags.bind(this))),t=this.listeners.main=this.listeners.main||{keydown:[\"input\",n.onKeydown.bind(this)],click:[\"scope\",n.onClickScope.bind(this)],dblclick:\"select\"!=i.mode&&[\"scope\",n.onDoubleClickScope.bind(this)],paste:[\"input\",n.onPaste.bind(this)],drop:[\"input\",n.onDrop.bind(this)],compositionstart:[\"input\",n.onCompositionStart.bind(this)],compositionend:[\"input\",n.onCompositionEnd.bind(this)]})t[a]&&this.DOM[t[a][0]][s](a,t[a][1]);clearInterval(this.listeners.main.originalInputValueObserverInterval),this.listeners.main.originalInputValueObserverInterval=setInterval(n.observeOriginalInputValue.bind(this),500);var o=this.listeners.main.inputMutationObserver||new MutationObserver(n.onInputDOMChange.bind(this));o.disconnect(),\"mix\"==i.mode&&o.observe(this.DOM.input,{childList:!0});}},bindGlobal:function(t){var e,i=this.events.callbacks,n=t?\"removeEventListener\":\"addEventListener\";if(this.listeners&&(t||!this.listeners.global)){this.listeners.global=this.listeners.global||[{type:this.isIE?\"keydown\":\"input\",target:this.DOM.input,cb:i[this.isIE?\"onInputIE\":\"onInput\"].bind(this)},{type:\"keydown\",target:window,cb:i.onWindowKeyDown.bind(this)},{type:\"focusin\",target:this.DOM.scope,cb:i.onFocusBlur.bind(this)},{type:\"focusout\",target:this.DOM.scope,cb:i.onFocusBlur.bind(this)},{type:\"click\",target:document,cb:i.onClickAnywhere.bind(this),useCapture:!0}];var s=!0,a=!1,o=void 0;try{for(var r,l=this.listeners.global[Symbol.iterator]();!(s=(r=l.next()).done);s=!0)(e=r.value).target[n](e.type,e.cb,!!e.useCapture);}catch(t){a=!0,o=t;}finally{try{s||null==l.return||l.return();}finally{if(a)throw o}}}},unbindGlobal:function(){this.events.bindGlobal.call(this,!0);},callbacks:{onFocusBlur:function(t){var e,i,n,s=b.call(this,t.target),a=v.call(this,t.target),o=\"focusin\"==t.type,r=\"focusout\"==t.type,l=null===(e=t.target)||void 0===e?void 0:e.closest(this.settings.classNames.tagTextSelector);if(s&&o&&!a)return this.toggleFocusClass(this.state.hasFocus=+new Date),l?this.events.callbacks.onEditTagFocus.call(this,s):void 0;var d=this.settings,c=t.target?this.trim(this.DOM.input.textContent):\"\",u=null===(n=this.value)||void 0===n||null===(i=n[0])||void 0===i?void 0:i[d.tagTextProp],g=d.dropdown.enabled>=0,h={relatedTarget:t.relatedTarget},p=this.state.actions.selectOption&&(g||!d.dropdown.closeOnSelect),f=this.state.actions.addNew&&g;if(r){if(t.relatedTarget===this.DOM.scope)return this.dropdown.hide(),void this.DOM.input.focus();this.postUpdate();}if(!p&&!f)if(this.state.hasFocus=!!o&&+new Date,this.toggleFocusClass(this.state.hasFocus),\"mix\"!=d.mode){if(o)return this.toggleFocusClass(!0),this.trigger(\"focus\",h),void(0!==d.dropdown.enabled&&d.userInput||this.state.dropdown.visible||this.dropdown.show(this.value.length?\"\":void 0));if(r&&!a){if(this.trigger(\"blur\",h),this.loading(!1),\"select\"==d.mode){if(this.value.length){var m=this.getTagElms()[0];c=this.trim(m.textContent);}u===c&&(c=\"\");}c&&!this.state.actions.selectOption&&d.addTagOnBlur&&d.addTagOn.includes(\"blur\")&&this.addTags(c,!0);}this.DOM.input.removeAttribute(\"style\"),this.dropdown.hide();}else o?this.trigger(\"focus\",h):r&&(this.trigger(\"blur\",h),this.loading(!1),this.dropdown.hide(),this.state.dropdown.visible=void 0,this.setStateSelection());},onCompositionStart:function(t){this.state.composing=!0;},onCompositionEnd:function(t){this.state.composing=!1;},onWindowKeyDown:function(t){var e,i=document.activeElement,n=v.call(this,i)&&this.DOM.scope.contains(document.activeElement),s=n&&i.hasAttribute(\"readonly\");if(n&&!s)switch(e=i.nextElementSibling,t.key){case\"Backspace\":this.settings.readonly||(this.removeTags(i),(e||this.DOM.input).focus());break;case\"Enter\":setTimeout(this.editTag.bind(this),0,i);}},onKeydown:function(t){var e=this,i=this.settings;if(!this.state.composing&&i.userInput){\"select\"==i.mode&&i.enforceWhitelist&&this.value.length&&\"Tab\"!=t.key&&t.preventDefault();var n=this.trim(t.target.textContent);this.trigger(\"keydown\",{event:t}),i.hooks.beforeKeyDown(t,{tagify:this}).then((function(s){if(\"mix\"==i.mode){switch(t.key){case\"Left\":case\"ArrowLeft\":e.state.actions.ArrowLeft=!0;break;case\"Delete\":case\"Backspace\":if(e.state.editing)return;var a=document.getSelection(),o=\"Delete\"==t.key&&a.anchorOffset==(a.anchorNode.length||0),l=a.anchorNode.previousSibling,c=1==a.anchorNode.nodeType||!a.anchorOffset&&l&&1==l.nodeType&&a.anchorNode.previousSibling;r(e.DOM.input.innerHTML);var u,g,h,p=e.getTagElms(),m=1===a.anchorNode.length&&a.anchorNode.nodeValue==String.fromCharCode(8203);if(\"edit\"==i.backspace&&c)return u=1==a.anchorNode.nodeType?null:a.anchorNode.previousElementSibling,setTimeout(e.editTag.bind(e),0,u),void t.preventDefault();if(f()&&W(c,Element))return h=d(c),c.hasAttribute(\"readonly\")||c.remove(),e.DOM.input.focus(),void setTimeout((function(){T(h),e.DOM.input.click();}));if(\"BR\"==a.anchorNode.nodeName)return;if((o||c)&&1==a.anchorNode.nodeType?g=0==a.anchorOffset?o?p[0]:null:p[Math.min(p.length,a.anchorOffset)-1]:o?g=a.anchorNode.nextElementSibling:W(c,Element)&&(g=c),3==a.anchorNode.nodeType&&!a.anchorNode.nodeValue&&a.anchorNode.previousElementSibling&&t.preventDefault(),(c||o)&&!i.backspace)return void t.preventDefault();if(\"Range\"!=a.type&&!a.anchorOffset&&a.anchorNode==e.DOM.input&&\"Delete\"!=t.key)return void t.preventDefault();if(\"Range\"!=a.type&&g&&g.hasAttribute(\"readonly\"))return void T(d(g));\"Delete\"==t.key&&m&&y(a.anchorNode.nextSibling)&&e.removeTags(a.anchorNode.nextSibling),clearTimeout(L),L=setTimeout((function(){var t=document.getSelection();r(e.DOM.input.innerHTML),!o&&t.anchorNode.previousSibling,e.value=[].map.call(p,(function(t,i){var n=y(t);if(t.parentNode||n.readonly)return n;e.trigger(\"remove\",{tag:t,index:i,data:n});})).filter((function(t){return t}));}),20);}return !0}var v=\"manual\"==i.dropdown.position;switch(t.key){case\"Backspace\":\"select\"==i.mode&&i.enforceWhitelist&&e.value.length?e.removeTags():e.state.dropdown.visible&&\"manual\"!=i.dropdown.position||\"\"!=t.target.textContent&&8203!=n.charCodeAt(0)||(!0===i.backspace?e.removeTags():\"edit\"==i.backspace&&setTimeout(e.editTag.bind(e),0));break;case\"Esc\":case\"Escape\":if(e.state.dropdown.visible)return;t.target.blur();break;case\"Down\":case\"ArrowDown\":e.state.dropdown.visible||e.dropdown.show();break;case\"ArrowRight\":var b=e.state.inputSuggestion||e.state.ddItemData;if(b&&i.autoComplete.rightKey)return void e.addTags([b],!0);break;case\"Tab\":var w=\"select\"==i.mode;if(!n||w)return !0;t.preventDefault();case\"Enter\":if(e.state.dropdown.visible&&!v)return;t.preventDefault(),setTimeout((function(){e.state.dropdown.visible&&!v||e.state.actions.selectOption||!i.addTagOn.includes(t.key.toLowerCase())||e.addTags(n,!0);}));}})).catch((function(t){return t}));}},onInput:function(t){this.postUpdate();var e=this.settings;if(\"mix\"==e.mode)return this.events.callbacks.onMixTagsInput.call(this,t);var i=this.input.normalize.call(this,void 0,{trim:!1}),n=i.length>=e.dropdown.enabled,s={value:i,inputElm:this.DOM.input},a=this.validateTag({value:i});\"select\"==e.mode&&this.toggleScopeValidation(a),s.isValid=a,this.state.inputText!=i&&(this.input.set.call(this,i,!1),-1!=i.search(e.delimiters)?this.addTags(i)&&this.input.set.call(this):e.dropdown.enabled>=0&&this.dropdown[n?\"show\":\"hide\"](i),this.trigger(\"input\",s));},onMixTagsInput:function(t){var e,i,n,s,a,o,r,l,d=this,c=this.settings,u=this.value.length,h=this.getTagElms(),p=document.createDocumentFragment(),m=window.getSelection().getRangeAt(0),v=[].map.call(h,(function(t){return y(t).value}));if(\"deleteContentBackward\"==t.inputType&&f()&&this.events.callbacks.onKeydown.call(this,{target:t.target,key:\"Backspace\"}),O(this.getTagElms()),this.value.slice().forEach((function(t){t.readonly&&!v.includes(t.value)&&p.appendChild(d.createTagElem(t));})),p.childNodes.length&&(m.insertNode(p),this.setRangeAtStartEnd(!1,p.lastChild)),h.length!=u)return this.value=[].map.call(this.getTagElms(),(function(t){return y(t)})),void this.update({withoutChangeEvent:!0});if(this.hasMaxTags())return !0;if(window.getSelection&&(o=window.getSelection()).rangeCount>0&&3==o.anchorNode.nodeType){if((m=o.getRangeAt(0).cloneRange()).collapse(!0),m.setStart(o.focusNode,0),n=(e=m.toString().slice(0,m.endOffset)).split(c.pattern).length-1,(i=e.match(c.pattern))&&(s=e.slice(e.lastIndexOf(i[i.length-1]))),s){if(this.state.actions.ArrowLeft=!1,this.state.tag={prefix:s.match(c.pattern)[0],value:s.replace(c.pattern,\"\")},this.state.tag.baseOffset=o.baseOffset-this.state.tag.value.length,l=this.state.tag.value.match(c.delimiters))return this.state.tag.value=this.state.tag.value.replace(c.delimiters,\"\"),this.state.tag.delimiters=l[0],this.addTags(this.state.tag.value,c.dropdown.clearOnSelect),void this.dropdown.hide();a=this.state.tag.value.length>=c.dropdown.enabled;try{r=(r=this.state.flaggedTags[this.state.tag.baseOffset]).prefix==this.state.tag.prefix&&r.value[0]==this.state.tag.value[0],this.state.flaggedTags[this.state.tag.baseOffset]&&!this.state.tag.value&&delete this.state.flaggedTags[this.state.tag.baseOffset];}catch(t){}(r||n<this.state.mixMode.matchedPatternCount)&&(a=!1);}else this.state.flaggedTags={};this.state.mixMode.matchedPatternCount=n;}setTimeout((function(){d.update({withoutChangeEvent:!0}),d.trigger(\"input\",g({},d.state.tag,{textContent:d.DOM.input.textContent})),d.state.tag&&d.dropdown[a?\"show\":\"hide\"](d.state.tag.value);}),10);},onInputIE:function(t){var e=this;setTimeout((function(){e.events.callbacks.onInput.call(e,t);}));},observeOriginalInputValue:function(){this.DOM.originalInput.parentNode||this.destroy(),this.DOM.originalInput.value!=this.DOM.originalInput.tagifyValue&&this.loadOriginalValues();},onClickAnywhere:function(t){t.target==this.DOM.scope||this.DOM.scope.contains(t.target)||(this.toggleFocusClass(!1),this.state.hasFocus=!1,!this.settings.userInput&&this.dropdown.hide());},onClickScope:function(t){var e=this.settings,i=t.target.closest(\".\"+e.classNames.tag),n=t.target===this.DOM.scope,s=+new Date-this.state.hasFocus;if(n&&\"select\"!=e.mode)this.DOM.input.focus();else {if(!t.target.classList.contains(e.classNames.tagX))return i&&!this.state.editing?(this.trigger(\"click\",{tag:i,index:this.getNodeIndex(i),data:y(i),event:t}),void(1!==e.editTags&&1!==e.editTags.clicks&&\"select\"!=e.mode||this.events.callbacks.onDoubleClickScope.call(this,t))):void(t.target==this.DOM.input&&(\"mix\"==e.mode&&this.fixFirefoxLastTagNoCaret(),s>500)?this.state.dropdown.visible?this.dropdown.hide():0===e.dropdown.enabled&&\"mix\"!=e.mode&&this.dropdown.show(this.value.length?\"\":void 0):\"select\"!=e.mode||0!==e.dropdown.enabled||this.state.dropdown.visible||(this.events.callbacks.onDoubleClickScope.call(this,q(function(t){for(var e=1;e<arguments.length;e++){var i=null!=arguments[e]?arguments[e]:{},n=Object.keys(i);\"function\"==typeof Object.getOwnPropertySymbols&&(n=n.concat(Object.getOwnPropertySymbols(i).filter((function(t){return Object.getOwnPropertyDescriptor(i,t).enumerable})))),n.forEach((function(e){B(t,e,i[e]);}));}return t}({},t),{target:this.getTagElms()[0]})),!e.userInput&&this.dropdown.show()));this.removeTags(t.target.parentNode);}},onPaste:function(t){var e=this;t.preventDefault();var i,n,s,a=this.settings;if(\"select\"==a.mode&&a.enforceWhitelist||!a.userInput)return !1;a.readonly||(n=t.clipboardData||window.clipboardData,s=n.getData(\"Text\"),a.hooks.beforePaste(t,{tagify:this,pastedText:s,clipboardData:n}).then((function(a){void 0===a&&(a=s),a&&(e.injectAtCaret(a,window.getSelection().getRangeAt(0)),\"mix\"==e.settings.mode?e.events.callbacks.onMixTagsInput.call(e,t):e.settings.pasteAsTags?i=e.addTags(e.state.inputText+a,!0):(e.state.inputText=a,e.dropdown.show(a))),e.trigger(\"paste\",{event:t,pastedText:s,clipboardData:n,tagsElems:i});})).catch((function(t){return t})));},onDrop:function(t){t.preventDefault();},onEditTagInput:function(t,e){var i,n=t.closest(\".\"+this.settings.classNames.tag),s=this.getNodeIndex(n),a=y(n),o=this.input.normalize.call(this,t),r=(B(i={},this.settings.tagTextProp,o),B(i,\"__tagId\",a.__tagId),i),l=this.validateTag(r);this.editTagChangeDetected(g(a,r))||!0!==t.originalIsValid||(l=!0),n.classList.toggle(this.settings.classNames.tagInvalid,!0!==l),a.__isValid=l,n.title=!0===l?a.title||a.value:l,o.length>=this.settings.dropdown.enabled&&(this.state.editing&&(this.state.editing.value=o),this.dropdown.show(o)),this.trigger(\"edit:input\",{tag:n,index:s,data:g({},this.value[s],{newValue:o}),event:e});},onEditTagPaste:function(t,e){var i=(e.clipboardData||window.clipboardData).getData(\"Text\");e.preventDefault();var n=w(i);this.setRangeAtStartEnd(!1,n);},onEditTagClick:function(t,e){this.events.callbacks.onClickScope.call(this,e);},onEditTagFocus:function(t){this.state.editing={scope:t,input:t.querySelector(\"[contenteditable]\")};},onEditTagBlur:function(t,e){if(v.call(this,e.relatedTarget)&&e.relatedTarget.contains(e.target))this.dropdown.hide();else if(this.state.editing&&(this.state.hasFocus||this.toggleFocusClass(),this.DOM.scope.contains(t))){var i,n,s,a=this.settings,o=t.closest(\".\"+a.classNames.tag),r=y(o),l=this.input.normalize.call(this,t),d=(B(i={},a.tagTextProp,l),B(i,\"__tagId\",r.__tagId),i),c=r.__originalData,u=this.editTagChangeDetected(g(r,d)),h=this.validateTag(d);if(l)if(u){var p;if(n=this.hasMaxTags(),s=g({},c,(B(p={},a.tagTextProp,this.trim(l)),B(p,\"__isValid\",h),p)),a.transformTag.call(this,s,c),!0!==(h=(!n||!0===c.__isValid)&&this.validateTag(s))){if(this.trigger(\"invalid\",{data:s,tag:o,message:h}),a.editTags.keepInvalid)return;a.keepInvalidTags?s.__isValid=h:s=c;}else a.keepInvalidTags&&(delete s.title,delete s[\"aria-invalid\"],delete s.class);this.onEditTagDone(o,s);}else this.onEditTagDone(o,c);else this.onEditTagDone(o);}},onEditTagkeydown:function(t,e){if(!this.state.composing)switch(this.trigger(\"edit:keydown\",{event:t}),t.key){case\"Esc\":case\"Escape\":this.state.editing=!1,!!e.__tagifyTagData.__originalData.value?e.parentNode.replaceChild(e.__tagifyTagData.__originalHTML,e):e.remove();break;case\"Enter\":case\"Tab\":t.preventDefault();setTimeout((function(){return t.target.blur()}),0);}},onDoubleClickScope:function(t){var e,i,n=t.target.closest(\".\"+this.settings.classNames.tag),s=y(n),a=this.settings;n&&!1!==s.editable&&(e=n.classList.contains(this.settings.classNames.tagEditing),i=n.hasAttribute(\"readonly\"),a.readonly||e||i||!this.settings.editTags||!a.userInput||this.editTag(n),this.toggleFocusClass(!0),\"select\"!=a.mode&&this.trigger(\"dblclick\",{tag:n,index:this.getNodeIndex(n),data:y(n)}));},onInputDOMChange:function(t){var e=this;t.forEach((function(t){t.addedNodes.forEach((function(t){if(\"<div><br></div>\"==t.outerHTML)t.replaceWith(document.createElement(\"br\"));else if(1==t.nodeType&&t.querySelector(e.settings.classNames.tagSelector)){var i,n=document.createTextNode(\"\");3==t.childNodes[0].nodeType&&\"BR\"!=t.previousSibling.nodeName&&(n=document.createTextNode(\"\\n\")),(i=t).replaceWith.apply(i,K([n].concat(K(K(t.childNodes).slice(0,-1))))),T(n);}else if(v.call(e,t)){var s;if(3!=(null===(s=t.previousSibling)||void 0===s?void 0:s.nodeType)||t.previousSibling.textContent||t.previousSibling.remove(),t.previousSibling&&\"BR\"==t.previousSibling.nodeName){t.previousSibling.replaceWith(\"\\n​\");for(var a=t.nextSibling,o=\"\";a;)o+=a.textContent,a=a.nextSibling;o.trim()&&T(t.previousSibling);}else t.previousSibling&&!y(t.previousSibling)||t.before(\"​\");}})),t.removedNodes.forEach((function(t){t&&\"BR\"==t.nodeName&&v.call(e,i)&&(e.removeTags(i),e.fixFirefoxLastTagNoCaret());}));}));var i=this.DOM.input.lastChild;i&&\"\"==i.nodeValue&&i.remove(),i&&\"BR\"==i.nodeName||this.DOM.input.appendChild(document.createElement(\"br\"));}}};function z(t,e){(null==e||e>t.length)&&(e=t.length);for(var i=0,n=new Array(e);i<e;i++)n[i]=t[i];return n}function X(t,e,i){return e in t?Object.defineProperty(t,e,{value:i,enumerable:!0,configurable:!0,writable:!0}):t[e]=i,t}function J(t,e){return null!=e&&\"undefined\"!=typeof Symbol&&e[Symbol.hasInstance]?!!e[Symbol.hasInstance](t):t instanceof e}function G(t){for(var e=1;e<arguments.length;e++){var i=null!=arguments[e]?arguments[e]:{},n=Object.keys(i);\"function\"==typeof Object.getOwnPropertySymbols&&(n=n.concat(Object.getOwnPropertySymbols(i).filter((function(t){return Object.getOwnPropertyDescriptor(i,t).enumerable})))),n.forEach((function(e){X(t,e,i[e]);}));}return t}function Q(t){return function(t){if(Array.isArray(t))return z(t)}(t)||function(t){if(\"undefined\"!=typeof Symbol&&null!=t[Symbol.iterator]||null!=t[\"@@iterator\"])return Array.from(t)}(t)||function(t,e){if(!t)return;if(\"string\"==typeof t)return z(t,e);var i=Object.prototype.toString.call(t).slice(8,-1);\"Object\"===i&&t.constructor&&(i=t.constructor.name);if(\"Map\"===i||\"Set\"===i)return Array.from(i);if(\"Arguments\"===i||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(i))return z(t,e)}(t)||function(){throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}()}function $(t,e){if(!t){n.warn(\"input element not found\",t);var i=new Proxy(this,{get:function(){return function(){return i}}});return i}if(t.__tagify)return n.warn(\"input element is already Tagified - Same instance is returned.\",t),t.__tagify;var s;g(this,function(t){var e=document.createTextNode(\"\");function i(t,i,n){n&&i.split(/\\s+/g).forEach((function(i){return e[t+\"EventListener\"].call(e,i,n)}));}return {off:function(t,e){return i(\"remove\",t,e),this},on:function(t,e){return e&&\"function\"==typeof e&&i(\"add\",t,e),this},trigger:function(i,s,a){var o;if(a=a||{cloneData:!0},i)if(t.settings.isJQueryPlugin)\"remove\"==i&&(i=\"removeTag\"),jQuery(t.DOM.originalInput).triggerHandler(i,[s]);else {try{var r=\"object\"==typeof s?s:{value:s};if((r=a.cloneData?g({},r):r).tagify=this,s.event&&(r.event=this.cloneEvent(s.event)),F(s,Object))for(var l in s)F(s[l],HTMLElement)&&(r[l]=s[l]);o=new CustomEvent(i,{detail:r});}catch(t){n.warn(t);}e.dispatchEvent(o);}}}}(this)),this.isFirefox=/firefox|fxios/i.test(navigator.userAgent)&&!/seamonkey/i.test(navigator.userAgent),this.isIE=window.document.documentMode,e=e||{},this.getPersistedData=(s=e.id,function(t){var e,i=\"/\"+t;if(1==localStorage.getItem(j+s+\"/v\",1))try{e=JSON.parse(localStorage[j+s+i]);}catch(t){}return e}),this.setPersistedData=function(t){return t?(localStorage.setItem(j+t+\"/v\",1),function(e,i){var n=\"/\"+i,s=JSON.stringify(e);e&&i&&(localStorage.setItem(j+t+n,s),dispatchEvent(new Event(\"storage\")));}):function(){}}(e.id),this.clearPersistedData=function(t){return function(e){var i=j+\"/\"+t+\"/\";if(e)localStorage.removeItem(i+e);else for(var n in localStorage)n.includes(i)&&localStorage.removeItem(n);}}(e.id),this.applySettings(t,e),this.state={inputText:\"\",editing:!1,composing:!1,actions:{},mixMode:{},dropdown:{},flaggedTags:{}},this.value=[],this.listeners={},this.DOM={},this.build(t),C.call(this),this.getCSSVars(),this.loadOriginalValues(),this.events.customBinding.call(this),this.events.binding.call(this),t.autofocus&&this.DOM.input.focus(),t.__tagify=this;}return $.prototype={_dropdown:P,placeCaretAfterNode:T,getSetTagData:y,helpers:{sameStr:s,removeCollectionProp:a,omit:o,isObject:u,parseHTML:l,escapeHTML:c,extend:g,concatWithoutDups:h,getUID:m,isNodeTag:v},customEventsList:[\"change\",\"add\",\"remove\",\"invalid\",\"input\",\"paste\",\"click\",\"keydown\",\"focus\",\"blur\",\"edit:input\",\"edit:beforeUpdate\",\"edit:updated\",\"edit:start\",\"edit:keydown\",\"dropdown:show\",\"dropdown:hide\",\"dropdown:select\",\"dropdown:updated\",\"dropdown:noMatch\",\"dropdown:scroll\"],dataProps:[\"__isValid\",\"__removed\",\"__originalData\",\"__originalHTML\",\"__tagId\"],trim:function(t){return this.settings.trim&&t&&\"string\"==typeof t?t.trim():t},parseHTML:l,templates:R,parseTemplate:function(t,e){return l((t=this.settings.templates[t]||t).apply(this,e))},set whitelist(t){var e=t&&Array.isArray(t);this.settings.whitelist=e?t:[],this.setPersistedData(e?t:[],\"whitelist\");},get whitelist(){return this.settings.whitelist},set userInput(t){this.settings.userInput=!!t,this.setContentEditable(!!t);},get userInput(){return this.settings.userInput},generateClassSelectors:function(t){var e=function(e){var i=e;Object.defineProperty(t,i+\"Selector\",{get:function(){return \".\"+this[i].split(\" \")[0]}});};for(var i in t)e(i);},applySettings:function(t,e){var i,n;x.templates=this.templates;var s=g({},x,\"mix\"==e.mode?{dropdown:{position:\"text\"}}:{}),a=this.settings=g({},s,e);if(a.disabled=t.hasAttribute(\"disabled\"),a.readonly=a.readonly||t.hasAttribute(\"readonly\"),a.placeholder=c(t.getAttribute(\"placeholder\")||a.placeholder||\"\"),a.required=t.hasAttribute(\"required\"),this.generateClassSelectors(a.classNames),void 0===a.dropdown.includeSelectedTags&&(a.dropdown.includeSelectedTags=a.duplicates),this.isIE&&(a.autoComplete=!1),[\"whitelist\",\"blacklist\"].forEach((function(e){var i=t.getAttribute(\"data-\"+e);i&&J(i=i.split(a.delimiters),Array)&&(a[e]=i);})),\"autoComplete\"in e&&!u(e.autoComplete)&&(a.autoComplete=x.autoComplete,a.autoComplete.enabled=e.autoComplete),\"mix\"==a.mode&&(a.pattern=a.pattern||/@/,a.autoComplete.rightKey=!0,a.delimiters=e.delimiters||null,a.tagTextProp&&!a.dropdown.searchKeys.includes(a.tagTextProp)&&a.dropdown.searchKeys.push(a.tagTextProp)),t.pattern)try{a.pattern=new RegExp(t.pattern);}catch(t){}if(a.delimiters){a._delimiters=a.delimiters;try{a.delimiters=new RegExp(this.settings.delimiters,\"g\");}catch(t){}}a.disabled&&(a.userInput=!1),this.TEXTS=G({},V,a.texts||{}),(\"select\"!=a.mode||(null===(i=e.dropdown)||void 0===i?void 0:i.enabled))&&a.userInput||(a.dropdown.enabled=0),a.dropdown.appendTarget=(null===(n=e.dropdown)||void 0===n?void 0:n.appendTarget)||document.body;var o=this.getPersistedData(\"whitelist\");Array.isArray(o)&&(this.whitelist=Array.isArray(a.whitelist)?h(a.whitelist,o):o);},getAttributes:function(t){var e,i=this.getCustomAttributes(t),n=\"\";for(e in i)n+=\" \"+e+(void 0!==t[e]?'=\"'.concat(i[e],'\"'):\"\");return n},getCustomAttributes:function(t){if(!u(t))return \"\";var e,i={};for(e in t)\"__\"!=e.slice(0,2)&&\"class\"!=e&&t.hasOwnProperty(e)&&void 0!==t[e]&&(i[e]=c(t[e]));return i},setStateSelection:function(){var t=window.getSelection(),e={anchorOffset:t.anchorOffset,anchorNode:t.anchorNode,range:t.getRangeAt&&t.rangeCount&&t.getRangeAt(0)};return this.state.selection=e,e},getCSSVars:function(){var t,e,i,n=getComputedStyle(this.DOM.scope,null);this.CSSVars={tagHideTransition:(t=function(t){if(!t)return {};var e=(t=t.trim().split(\" \")[0]).split(/\\d+/g).filter((function(t){return t})).pop().trim();return {value:+t.split(e).filter((function(t){return t}))[0].trim(),unit:e}}((i=\"tag-hide-transition\",n.getPropertyValue(\"--\"+i))),e=t.value,\"s\"==t.unit?1e3*e:e)};},build:function(t){var e=this.DOM,i=t.closest(\"label\");this.settings.mixMode.integrated?(e.originalInput=null,e.scope=t,e.input=t):(e.originalInput=t,e.originalInput_tabIndex=t.tabIndex,e.scope=this.parseTemplate(\"wrapper\",[t,this.settings]),e.input=e.scope.querySelector(this.settings.classNames.inputSelector),t.parentNode.insertBefore(e.scope,t),t.tabIndex=-1),i&&i.setAttribute(\"for\",\"\");},destroy:function(){this.events.unbindGlobal.call(this),this.DOM.scope.parentNode.removeChild(this.DOM.scope),this.DOM.originalInput.tabIndex=this.DOM.originalInput_tabIndex,delete this.DOM.originalInput.__tagify,this.dropdown.hide(!0),clearTimeout(this.dropdownHide__bindEventsTimeout),clearInterval(this.listeners.main.originalInputValueObserverInterval);},loadOriginalValues:function(t){var e,i=this.settings;if(this.state.blockChangeEvent=!0,void 0===t){var n=this.getPersistedData(\"value\");t=n&&!this.DOM.originalInput.value?n:i.mixMode.integrated?this.DOM.input.textContent:this.DOM.originalInput.value;}if(this.removeAllTags(),t)if(\"mix\"==i.mode)this.parseMixTags(t),(e=this.DOM.input.lastChild)&&\"BR\"==e.tagName||this.DOM.input.insertAdjacentHTML(\"beforeend\",\"<br>\");else {try{J(JSON.parse(t),Array)&&(t=JSON.parse(t));}catch(t){}this.addTags(t,!0).forEach((function(t){return t&&t.classList.add(i.classNames.tagNoAnimation)}));}else this.postUpdate();this.state.lastOriginalValueReported=i.mixMode.integrated?\"\":this.DOM.originalInput.value;},cloneEvent:function(t){var e={};for(var i in t)\"path\"!=i&&(e[i]=t[i]);return e},loading:function(t){return this.state.isLoading=t,this.DOM.scope.classList[t?\"add\":\"remove\"](this.settings.classNames.scopeLoading),this},tagLoading:function(t,e){return t&&t.classList[e?\"add\":\"remove\"](this.settings.classNames.tagLoading),this},toggleClass:function(t,e){\"string\"==typeof t&&this.DOM.scope.classList.toggle(t,e);},toggleScopeValidation:function(t){var e=!0===t||void 0===t;!this.settings.required&&t&&t===this.TEXTS.empty&&(e=!0),this.toggleClass(this.settings.classNames.tagInvalid,!e),this.DOM.scope.title=e?\"\":t;},toggleFocusClass:function(t){this.toggleClass(this.settings.classNames.focus,!!t);},setPlaceholder:function(t){var e=this;[\"data\",\"aria\"].forEach((function(i){return e.DOM.input.setAttribute(\"\".concat(i,\"-placeholder\"),t)}));},triggerChangeEvent:function(){if(!this.settings.mixMode.integrated){var t=this.DOM.originalInput,e=this.state.lastOriginalValueReported!==t.value,i=new CustomEvent(\"change\",{bubbles:!0});e&&(this.state.lastOriginalValueReported=t.value,i.simulated=!0,t._valueTracker&&t._valueTracker.setValue(Math.random()),t.dispatchEvent(i),this.trigger(\"change\",this.state.lastOriginalValueReported),t.value=this.state.lastOriginalValueReported);}},events:U,fixFirefoxLastTagNoCaret:function(){},setRangeAtStartEnd:function(t,e){if(e){t=\"number\"==typeof t?t:!!t,e=e.lastChild||e;var i=document.getSelection();if(J(i.focusNode,Element)&&!this.DOM.input.contains(i.focusNode))return !0;try{i.rangeCount>=1&&[\"Start\",\"End\"].forEach((function(n){return i.getRangeAt(0)[\"set\"+n](e,t||e.length)}));}catch(t){console.warn(t);}}},insertAfterTag:function(t,e){if(e=e||this.settings.mixMode.insertAfterTag,t&&t.parentNode&&e)return e=\"string\"==typeof e?document.createTextNode(e):e,t.parentNode.insertBefore(e,t.nextSibling),e},editTagChangeDetected:function(t){var e=t.__originalData;for(var i in e)if(!this.dataProps.includes(i)&&t[i]!=e[i])return !0;return !1},getTagTextNode:function(t){return t.querySelector(this.settings.classNames.tagTextSelector)},setTagTextNode:function(t,e){this.getTagTextNode(t).innerHTML=c(e);},editTag:function(t,e){var i=this;t=t||this.getLastTag(),e=e||{};var s=this.settings,a=this.getTagTextNode(t),o=this.getNodeIndex(t),r=y(t),l=this.events.callbacks,d=!0;if(\"select\"!=s.mode&&this.dropdown.hide(),a){if(!J(r,Object)||!(\"editable\"in r)||r.editable)return r=y(t,{__originalData:g({},r),__originalHTML:t.cloneNode(!0)}),y(r.__originalHTML,r.__originalData),a.setAttribute(\"contenteditable\",!0),t.classList.add(s.classNames.tagEditing),a.addEventListener(\"click\",l.onEditTagClick.bind(this,t)),a.addEventListener(\"blur\",l.onEditTagBlur.bind(this,this.getTagTextNode(t))),a.addEventListener(\"input\",l.onEditTagInput.bind(this,a)),a.addEventListener(\"paste\",l.onEditTagPaste.bind(this,a)),a.addEventListener(\"keydown\",(function(e){return l.onEditTagkeydown.call(i,e,t)})),a.addEventListener(\"compositionstart\",l.onCompositionStart.bind(this)),a.addEventListener(\"compositionend\",l.onCompositionEnd.bind(this)),e.skipValidation||(d=this.editTagToggleValidity(t)),a.originalIsValid=d,this.trigger(\"edit:start\",{tag:t,index:o,data:r,isValid:d}),a.focus(),this.setRangeAtStartEnd(!1,a),0===s.dropdown.enabled&&this.dropdown.show(),this.state.hasFocus=!0,this}else n.warn(\"Cannot find element in Tag template: .\",s.classNames.tagTextSelector);},editTagToggleValidity:function(t,e){var i;if(e=e||y(t))return (i=!(\"__isValid\"in e)||!0===e.__isValid)||this.removeTagsFromValue(t),this.update(),t.classList.toggle(this.settings.classNames.tagNotAllowed,!i),e.__isValid=i,e.__isValid;n.warn(\"tag has no data: \",t,e);},onEditTagDone:function(t,e){t=t||this.state.editing.scope,e=e||{};var i,n,s={tag:t,index:this.getNodeIndex(t),previousData:y(t),data:e},a=this.settings;this.trigger(\"edit:beforeUpdate\",s,{cloneData:!1}),this.state.editing=!1,delete e.__originalData,delete e.__originalHTML,t&&((n=e[a.tagTextProp])?null===(i=n.trim)||void 0===i?void 0:i.call(n):a.tagTextProp in e?void 0:e.value)?(t=this.replaceTag(t,e),this.editTagToggleValidity(t,e),a.a11y.focusableTags?t.focus():T(t)):t&&this.removeTags(t),this.trigger(\"edit:updated\",s),this.dropdown.hide(),this.settings.keepInvalidTags&&this.reCheckInvalidTags();},replaceTag:function(t,e){e&&\"\"!==e.value&&void 0!==e.value||(e=t.__tagifyTagData),e.__isValid&&1!=e.__isValid&&g(e,this.getInvalidTagAttrs(e,e.__isValid));var i=this.createTagElem(e);return t.parentNode.replaceChild(i,t),this.updateValueByDOMTags(),i},updateValueByDOMTags:function(){var t=this;this.value.length=0,[].forEach.call(this.getTagElms(),(function(e){e.classList.contains(t.settings.classNames.tagNotAllowed.split(\" \")[0])||t.value.push(y(e));})),this.update();},injectAtCaret:function(t,e){var i;if(!(e=e||(null===(i=this.state.selection)||void 0===i?void 0:i.range))&&t)return this.appendMixTags(t),this;var n=w(t,e);return this.setRangeAtStartEnd(!1,n),this.updateValueByDOMTags(),this.update(),this},input:{set:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:\"\",e=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],i=this.settings.dropdown.closeOnSelect;this.state.inputText=t,e&&(this.DOM.input.innerHTML=c(\"\"+t)),!t&&i&&this.dropdown.hide.bind(this),this.input.autocomplete.suggest.call(this),this.input.validate.call(this);},raw:function(){return this.DOM.input.textContent},validate:function(){var t=!this.state.inputText||!0===this.validateTag({value:this.state.inputText});return this.DOM.input.classList.toggle(this.settings.classNames.inputInvalid,!t),t},normalize:function(t,e){var i=t||this.DOM.input,n=[];i.childNodes.forEach((function(t){return 3==t.nodeType&&n.push(t.nodeValue)})),n=n.join(\"\\n\");try{n=n.replace(/(?:\\r\\n|\\r|\\n)/g,this.settings.delimiters.source.charAt(0));}catch(t){}return n=n.replace(/\\s/g,\" \"),(null==e?void 0:e.trim)?this.trim(n):n},autocomplete:{suggest:function(t){if(this.settings.autoComplete.enabled){\"object\"!=typeof(t=t||{value:\"\"})&&(t={value:t});var e=this.dropdown.getMappedValue(t);if(\"number\"!=typeof e){var i=this.state.inputText.toLowerCase(),n=e.substr(0,this.state.inputText.length).toLowerCase(),s=e.substring(this.state.inputText.length);e&&this.state.inputText&&n==i?(this.DOM.input.setAttribute(\"data-suggest\",s),this.state.inputSuggestion=t):(this.DOM.input.removeAttribute(\"data-suggest\"),delete this.state.inputSuggestion);}}},set:function(t){var e=this.DOM.input.getAttribute(\"data-suggest\"),i=t||(e?this.state.inputText+e:null);return !!i&&(\"mix\"==this.settings.mode?this.replaceTextWithNode(document.createTextNode(this.state.tag.prefix+i)):(this.input.set.call(this,i),this.setRangeAtStartEnd(!1,this.DOM.input)),this.input.autocomplete.suggest.call(this),this.dropdown.hide(),!0)}}},getTagIdx:function(t){return this.value.findIndex((function(e){return e.__tagId==(t||{}).__tagId}))},getNodeIndex:function(t){var e=0;if(t)for(;t=t.previousElementSibling;)e++;return e},getTagElms:function(){for(var t=arguments.length,e=new Array(t),i=0;i<t;i++)e[i]=arguments[i];var n=\".\"+Q(this.settings.classNames.tag.split(\" \")).concat(Q(e)).join(\".\");return [].slice.call(this.DOM.scope.querySelectorAll(n))},getLastTag:function(){var t=this.DOM.scope.querySelectorAll(\"\".concat(this.settings.classNames.tagSelector,\":not(.\").concat(this.settings.classNames.tagHide,\"):not([readonly])\"));return t[t.length-1]},isTagDuplicate:function(t,e,i){var n=0;if(\"select\"==this.settings.mode)return !1;var a=!0,o=!1,r=void 0;try{for(var l,d=this.value[Symbol.iterator]();!(a=(l=d.next()).done);a=!0){var c=l.value;s(this.trim(\"\"+t),c.value,e)&&i!=c.__tagId&&n++;}}catch(t){o=!0,r=t;}finally{try{a||null==d.return||d.return();}finally{if(o)throw r}}return n},getTagIndexByValue:function(t){var e=this,i=[],n=this.settings.dropdown.caseSensitive;return this.getTagElms().forEach((function(a,o){a.__tagifyTagData&&s(e.trim(a.__tagifyTagData.value),t,n)&&i.push(o);})),i},getTagElmByValue:function(t){var e=this.getTagIndexByValue(t)[0];return this.getTagElms()[e]},flashTag:function(t){var e=this;t&&(t.classList.add(this.settings.classNames.tagFlash),setTimeout((function(){t.classList.remove(e.settings.classNames.tagFlash);}),100));},isTagBlacklisted:function(t){return t=this.trim(t.toLowerCase()),this.settings.blacklist.filter((function(e){return (\"\"+e).toLowerCase()==t})).length},isTagWhitelisted:function(t){return !!this.getWhitelistItem(t)},getWhitelistItem:function(t,e,i){e=e||\"value\";var n,a=this.settings;return (i=i||a.whitelist).some((function(i){var o=\"string\"==typeof i?i:i[e]||i.value;if(s(o,t,a.dropdown.caseSensitive,a.trim))return n=\"string\"==typeof i?{value:i}:i,!0})),n||\"value\"!=e||\"value\"==a.tagTextProp||(n=this.getWhitelistItem(t,a.tagTextProp,i)),n},validateTag:function(t){var e=this.settings,i=\"value\"in t?\"value\":e.tagTextProp,n=this.trim(t[i]+\"\");return (t[i]+\"\").trim()?\"mix\"!=e.mode&&e.pattern&&J(e.pattern,RegExp)&&!e.pattern.test(n)?this.TEXTS.pattern:!e.duplicates&&this.isTagDuplicate(n,e.dropdown.caseSensitive,t.__tagId)?this.TEXTS.duplicate:this.isTagBlacklisted(n)||e.enforceWhitelist&&!this.isTagWhitelisted(n)?this.TEXTS.notAllowed:!e.validate||e.validate(t):this.TEXTS.empty},getInvalidTagAttrs:function(t,e){return {\"aria-invalid\":!0,class:\"\".concat(t.class||\"\",\" \").concat(this.settings.classNames.tagNotAllowed).trim(),title:e}},hasMaxTags:function(){return this.value.length>=this.settings.maxTags&&this.TEXTS.exceed},setReadonly:function(t,e){var i=this.settings;document.activeElement.blur(),i[e||\"readonly\"]=t,this.DOM.scope[(t?\"set\":\"remove\")+\"Attribute\"](e||\"readonly\",!0),this.settings.userInput=!0,this.setContentEditable(!t);},setContentEditable:function(t){this.DOM.input.contentEditable=t,this.DOM.input.tabIndex=t?0:-1;},setDisabled:function(t){this.setReadonly(t,\"disabled\");},normalizeTags:function(t){var e=this,i=this.settings,n=i.whitelist,s=i.delimiters,a=i.mode,o=i.tagTextProp,r=[],l=!!n&&J(n[0],Object),d=Array.isArray(t),c=d&&t[0].value,u=function(t){return (t+\"\").split(s).filter((function(t){return t})).map((function(t){var i;return X(i={},o,e.trim(t)),X(i,\"value\",e.trim(t)),i}))};if(\"number\"==typeof t&&(t=t.toString()),\"string\"==typeof t){if(!t.trim())return [];t=u(t);}else if(d){var g;t=(g=[]).concat.apply(g,Q(t.map((function(t){return null!=t.value?t:u(t)}))));}return l&&!c&&(t.forEach((function(t){var i=r.map((function(t){return t.value})),n=e.dropdown.filterListItems.call(e,t[o],{exact:!0});e.settings.duplicates||(n=n.filter((function(t){return !i.includes(t.value)})));var s=n.length>1?e.getWhitelistItem(t[o],o,n):n[0];s&&J(s,Object)?r.push(s):\"mix\"!=a&&(null==t.value&&(t.value=t[o]),r.push(t));})),r.length&&(t=r)),t},parseMixTags:function(t){var e=this,i=this.settings,n=i.mixTagsInterpolator,s=i.duplicates,a=i.transformTag,o=i.enforceWhitelist,r=i.maxTags,l=i.tagTextProp,d=[];t=t.split(n[0]).map((function(t,i){var c,u,g,h=t.split(n[1]),p=h[0],f=d.length==r;try{if(p==+p)throw Error;u=JSON.parse(p);}catch(t){u=e.normalizeTags(p)[0]||{value:p};}if(a.call(e,u),f||!(h.length>1)||o&&!e.isTagWhitelisted(u.value)||!s&&e.isTagDuplicate(u.value)){if(t)return i?n[0]+t:t}else u[c=u[l]?l:\"value\"]=e.trim(u[c]),g=e.createTagElem(u),d.push(u),g.classList.add(e.settings.classNames.tagNoAnimation),h[0]=g.outerHTML,e.value.push(u);return h.join(\"\")})).join(\"\"),this.DOM.input.innerHTML=t,this.DOM.input.appendChild(document.createTextNode(\"\")),this.DOM.input.normalize();var c=this.getTagElms();return c.forEach((function(t,e){return y(t,d[e])})),this.update({withoutChangeEvent:!0}),O(c,this.state.hasFocus),t},replaceTextWithNode:function(t,e){if(this.state.tag||e){e=e||this.state.tag.prefix+this.state.tag.value;var i,n,s=this.state.selection||window.getSelection(),a=s.anchorNode,o=this.state.tag.delimiters?this.state.tag.delimiters.length:0;return a.splitText(s.anchorOffset-o),-1==(i=a.nodeValue.lastIndexOf(e))?!0:(n=a.splitText(i),t&&a.parentNode.replaceChild(t,n),!0)}},prepareNewTagNode:function(t,e){e=e||{};var i=this.settings,n=[],s={},a=Object.assign({},t,{value:t.value+\"\"});if(t=Object.assign({},a),i.transformTag.call(this,t),t.__isValid=this.hasMaxTags()||this.validateTag(t),!0!==t.__isValid){if(e.skipInvalid)return;if(g(s,this.getInvalidTagAttrs(t,t.__isValid),{__preInvalidData:a}),t.__isValid==this.TEXTS.duplicate&&this.flashTag(this.getTagElmByValue(t.value)),!i.createInvalidTags)return void n.push(t.value)}return \"readonly\"in t&&(t.readonly?s[\"aria-readonly\"]=!0:delete t.readonly),{tagElm:this.createTagElem(t,s),tagData:t,aggregatedInvalidInput:n}},postProcessNewTagNode:function(t,e){var i=this,n=this.settings,s=e.__isValid;s&&!0===s?(this.value.push(e),this.trigger(\"add\",{tag:t,index:this.value.length-1,data:e})):(this.trigger(\"invalid\",{data:e,index:this.value.length,tag:t,message:s}),n.keepInvalidTags||setTimeout((function(){return i.removeTags(t,!0)}),1e3)),this.dropdown.position();},selectTag:function(t,e){var i=this;if(!this.settings.enforceWhitelist||this.isTagWhitelisted(e.value)){this.state.actions.selectOption&&setTimeout((function(){return i.setRangeAtStartEnd(!1,i.DOM.input)}));var n=this.getLastTag();return n?this.replaceTag(n,e):this.appendTag(t),this.value[0]=e,this.update(),this.trigger(\"add\",{tag:t,data:e}),[t]}},addEmptyTag:function(t){var e=g({value:\"\"},t||{}),i=this.createTagElem(e);y(i,e),this.appendTag(i),this.editTag(i,{skipValidation:!0}),this.toggleFocusClass(!0);},addTags:function(t,e,i){var n=this,s=[],a=this.settings,o=[],r=document.createDocumentFragment();if(!t||0==t.length)return s;switch(t=this.normalizeTags(t),a.mode){case\"mix\":return this.addMixTags(t);case\"select\":e=!1,this.removeAllTags();}return this.DOM.input.removeAttribute(\"style\"),t.forEach((function(t){var e=n.prepareNewTagNode(t,{skipInvalid:i||a.skipInvalid});if(e){var l=e.tagElm;if(t=e.tagData,o=e.aggregatedInvalidInput,s.push(l),\"select\"==a.mode)return n.selectTag(l,t);r.appendChild(l),n.postProcessNewTagNode(l,t);}})),this.appendTag(r),this.update(),t.length&&e&&(this.input.set.call(this,a.createInvalidTags?\"\":o.join(a._delimiters)),this.setRangeAtStartEnd(!1,this.DOM.input)),a.dropdown.enabled&&this.dropdown.refilter(),s},addMixTags:function(t){var e=this;if((t=this.normalizeTags(t))[0].prefix||this.state.tag)return this.prefixedTextToTag(t[0]);var i=document.createDocumentFragment();return t.forEach((function(t){var n=e.prepareNewTagNode(t);i.appendChild(n.tagElm),e.insertAfterTag(n.tagElm),e.postProcessNewTagNode(n.tagElm,n.tagData);})),this.appendMixTags(i),i.children},appendMixTags:function(t){var e=!!this.state.selection;e?this.injectAtCaret(t):(this.DOM.input.focus(),(e=this.setStateSelection()).range.setStart(this.DOM.input,e.range.endOffset),e.range.setEnd(this.DOM.input,e.range.endOffset),this.DOM.input.appendChild(t),this.updateValueByDOMTags(),this.update());},prefixedTextToTag:function(t){var e,i,n,s=this,a=this.settings,o=null===(e=this.state.tag)||void 0===e?void 0:e.delimiters;if(t.prefix=t.prefix||this.state.tag?this.state.tag.prefix:(a.pattern.source||a.pattern)[0],n=this.prepareNewTagNode(t),i=n.tagElm,this.replaceTextWithNode(i)||this.DOM.input.appendChild(i),setTimeout((function(){return i.classList.add(s.settings.classNames.tagNoAnimation)}),300),this.value.push(n.tagData),this.update(),!o){var r=this.insertAfterTag(i)||i;setTimeout(T,0,r);}return this.state.tag=null,this.postProcessNewTagNode(i,n.tagData),i},appendTag:function(t){var e=this.DOM,i=e.input;e.scope.insertBefore(t,i);},createTagElem:function(t,e){t.__tagId=m();var i,n=g({},t,G({value:c(t.value+\"\")},e));return function(t){for(var e,i=document.createNodeIterator(t,NodeFilter.SHOW_TEXT,null,!1);e=i.nextNode();)e.textContent.trim()||e.parentNode.removeChild(e);}(i=this.parseTemplate(\"tag\",[n,this])),y(i,t),i},reCheckInvalidTags:function(){var t=this,e=this.settings;this.getTagElms(e.classNames.tagNotAllowed).forEach((function(i,n){var s=y(i),a=t.hasMaxTags(),o=t.validateTag(s),r=!0===o&&!a;if(\"select\"==e.mode&&t.toggleScopeValidation(o),r)return s=s.__preInvalidData?s.__preInvalidData:{value:s.value},t.replaceTag(i,s);i.title=a||o;}));},removeTags:function(t,e,i){var n,s=this,a=this.settings;if(t=t&&J(t,HTMLElement)?[t]:J(t,Array)?t:t?[t]:[this.getLastTag()],n=t.reduce((function(t,e){e&&\"string\"==typeof e&&(e=s.getTagElmByValue(e));var i=y(e);return e&&i&&!i.readonly&&t.push({node:e,idx:s.getTagIdx(i),data:y(e,{__removed:!0})}),t}),[]),i=\"number\"==typeof i?i:this.CSSVars.tagHideTransition,\"select\"==a.mode&&(i=0,this.input.set.call(this)),1==n.length&&\"select\"!=a.mode&&n[0].node.classList.contains(a.classNames.tagNotAllowed)&&(e=!0),n.length)return a.hooks.beforeRemoveTag(n,{tagify:this}).then((function(){var t=function(t){t.node.parentNode&&(t.node.parentNode.removeChild(t.node),e?a.keepInvalidTags&&this.trigger(\"remove\",{tag:t.node,index:t.idx}):(this.trigger(\"remove\",{tag:t.node,index:t.idx,data:t.data}),this.dropdown.refilter(),this.dropdown.position(),this.DOM.input.normalize(),a.keepInvalidTags&&this.reCheckInvalidTags()));};i&&i>10&&1==n.length?function(e){e.node.style.width=parseFloat(window.getComputedStyle(e.node).width)+\"px\",document.body.clientTop,e.node.classList.add(a.classNames.tagHide),setTimeout(t.bind(this),i,e);}.call(s,n[0]):n.forEach(t.bind(s)),e||(s.removeTagsFromValue(n.map((function(t){return t.node}))),s.update(),\"select\"==a.mode&&a.userInput&&s.setContentEditable(!0));})).catch((function(t){}))},removeTagsFromDOM:function(){this.getTagElms().forEach((function(t){return t.remove()}));},removeTagsFromValue:function(t){var e=this;(t=Array.isArray(t)?t:[t]).forEach((function(t){var i=y(t),n=e.getTagIdx(i);n>-1&&e.value.splice(n,1);}));},removeAllTags:function(t){var e=this;t=t||{},this.value=[],\"mix\"==this.settings.mode?this.DOM.input.innerHTML=\"\":this.removeTagsFromDOM(),this.dropdown.refilter(),this.dropdown.position(),this.state.dropdown.visible&&setTimeout((function(){e.DOM.input.focus();})),\"select\"==this.settings.mode&&(this.input.set.call(this),this.settings.userInput&&this.setContentEditable(!0)),this.update(t);},postUpdate:function(){this.state.blockChangeEvent=!1;var t,e,i=this.settings,n=i.classNames,s=\"mix\"==i.mode?i.mixMode.integrated?this.DOM.input.textContent:this.DOM.originalInput.value.trim():this.value.length+this.input.raw.call(this).length;(this.toggleClass(n.hasMaxTags,this.value.length>=i.maxTags),this.toggleClass(n.hasNoTags,!this.value.length),this.toggleClass(n.empty,!s),\"select\"==i.mode)&&this.toggleScopeValidation(null===(e=this.value)||void 0===e||null===(t=e[0])||void 0===t?void 0:t.__isValid);},setOriginalInputValue:function(t){var e=this.DOM.originalInput;this.settings.mixMode.integrated||(e.value=t,e.tagifyValue=e.value,this.setPersistedData(t,\"value\"));},update:function(t){clearTimeout(this.debouncedUpdateTimeout),this.debouncedUpdateTimeout=setTimeout(function(){var e=this.getInputValue();this.setOriginalInputValue(e),this.settings.onChangeAfterBlur&&(t||{}).withoutChangeEvent||this.state.blockChangeEvent||this.triggerChangeEvent();this.postUpdate();}.bind(this),100);},getInputValue:function(){var t=this.getCleanValue();return \"mix\"==this.settings.mode?this.getMixedTagsAsString(t):t.length?this.settings.originalInputValueFormat?this.settings.originalInputValueFormat(t):JSON.stringify(t):\"\"},getCleanValue:function(t){return a(t||this.value,this.dataProps)},getMixedTagsAsString:function(){var t=\"\",e=this,i=this.settings,n=i.originalInputValueFormat||JSON.stringify,s=i.mixTagsInterpolator;return function i(a){a.childNodes.forEach((function(a){if(1==a.nodeType){var r=y(a);if(\"BR\"==a.tagName&&(t+=\"\\r\\n\"),r&&v.call(e,a)){if(r.__removed)return;t+=s[0]+n(o(r,e.dataProps))+s[1];}else a.getAttribute(\"style\")||[\"B\",\"I\",\"U\"].includes(a.tagName)?t+=a.textContent:\"DIV\"!=a.tagName&&\"P\"!=a.tagName||(t+=\"\\r\\n\",i(a));}else t+=a.textContent;}));}(this.DOM.input),t}},$.prototype.removeTag=$.prototype.removeTags,$}));\n\t\n} (tagify_min));\n\nvar tagify_minExports = tagify_min.exports;\nvar Tagify = /*@__PURE__*/getDefaultExportFromCjs(tagify_minExports);\n\n// let weaponTagInput = document.querySelector('input[name=system.weaponTraits]');\r\n// \r\n// let typeInput = document.querySelector('input[name=system.type]');\r\n\r\n// initialize Tagify on the above input node reference\r\n\r\n\r\n/**\r\n * Extend the basic ItemSheet with some very simple modifications\r\n * @extends {ItemSheet}\r\n */\r\nclass KSItemSheet extends ItemSheet {\r\n  /** @override */\r\n  static get defaultOptions() {\r\n    return foundry.utils.mergeObject(super.defaultOptions, {\r\n      classes: ['kaiserschlacht', 'sheet', 'item'],\r\n      width: 520,\r\n      height: 480,\r\n      tabs: [\r\n        {\r\n          navSelector: '.sheet-tabs',\r\n          contentSelector: '.sheet-body',\r\n          initial: 'description',\r\n        },\r\n      ],\r\n    });\r\n  }\r\n\r\n  /** @override */\r\n  get template() {\r\n    const path = 'systems/kaiserschlacht/templates/item';\r\n    // Return a single sheet for all item types.\r\n    // return `${path}/item-sheet.hbs`;\r\n\r\n    // Alternatively, you could use the following return statement to do a\r\n    // unique item sheet by type, like `weapon-sheet.hbs`.\r\n    return `${path}/item-${this.item.type}-sheet.hbs`;\r\n  }\r\n\r\n  /* -------------------------------------------- */\r\n\r\n  /** @override */\r\n  getData() {\r\n    // Retrieve base data structure.\r\n    let context = super.getData();\r\n    // Use a safe clone of the item data for further operations.\r\n    const itemData = context.data;\r\n\r\n    // Retrieve the roll data for TinyMCE editors.\r\n    context.rollData = this.item.getRollData();\r\n\r\n    // Add the item's data to context.data for easier access, as well as flags.\r\n    context.system = itemData.system;\r\n    context.flags = itemData.flags;\r\n\r\n    // Prepare active effects for easier access\r\n    context.effects = prepareActiveEffectCategories(this.item.effects);\r\n\r\n    return context;\r\n  }\r\n\r\n  /* -------------------------------------------- */\r\n\r\n  /** @override */\r\n  activateListeners(html) {\r\n    super.activateListeners(html);\r\n\r\n    // Everything below here is only needed if the sheet is editable\r\n    if (!this.isEditable) return;\r\n    // toggle item equip\r\n    html.on('click', '.equip-toggle', (ev) => {\r\n\r\n      //const li = $(ev.currentTarget).parents('.item');\r\n      this.item.equipToggle();\r\n\r\n    });\r\n    // Roll handlers, click handlers, etc. would go here.\r\n    let weaponTagInput = html[0].querySelector('input[name=\"system.weaponTraits\"]');\r\n    console.log(weaponTagInput);\r\n    console.log(CONFIG.weaponTagWhitelist);\r\n    this.item.weaponTagify = new Tagify(weaponTagInput, {\r\n      id: 'system.weaponTraits',\r\n      whitelist: CONFIG.weaponTagWhitelist,\r\n      userInput: false\r\n    });\r\n    console.log(this.item.weaponTagify);\r\n    // Active Effect management\r\n    html.on('click', '.effect-control', (ev) =>\r\n      onManageActiveEffect(ev, this.item)\r\n    );\r\n  }\r\n}\n\n/**\r\n * Define a set of template paths to pre-load\r\n * Pre-loaded templates are compiled and cached for fast access when rendering\r\n * @return {Promise}\r\n */\r\nconst preloadHandlebarsTemplates = async function () {\r\n  return loadTemplates([\r\n    // Actor partials.\r\n    'systems/kaiserschlacht/templates/actor/parts/actor-features.hbs',\r\n    'systems/kaiserschlacht/templates/actor/parts/actor-items.hbs',\r\n    'systems/kaiserschlacht/templates/actor/parts/actor-spells.hbs',\r\n    'systems/kaiserschlacht/templates/actor/parts/actor-effects.hbs',\r\n    'systems/kaiserschlacht/templates/actor/parts/actor-weapons.hbs',\r\n    'systems/kaiserschlacht/templates/actor/parts/actor-armor.hbs',\r\n\r\n    // Item partials\r\n    'systems/kaiserschlacht/templates/item/parts/item-effects.hbs',\r\n  ]);\r\n};\n\nconst KAISERSCHLACHT = {};\r\n\r\n/**\r\n * The set of Ability Scores used within the system.\r\n * @type {Object}\r\n */\r\nKAISERSCHLACHT.abilities = {\r\n  physique: 'KAISERSCHLACHT.Ability.Physique.long',\r\n  finesse: 'KAISERSCHLACHT.Ability.Finesse.long',\r\n  wits: 'KAISERSCHLACHT.Ability.Wits.long',\r\n  presence: 'KAISERSCHLACHT.Ability.Presence.long',\r\n};\r\nKAISERSCHLACHT.skills = {\r\n  brawl: 'KAISERSCHLACHT.Skill.Brawl.long',\r\n  athletics: 'KAISERSCHLACHT.Skill.Athletics.long',\r\n  smash: 'KAISERSCHLACHT.Skill.Smash.long',\r\n  shooting: 'KAISERSCHLACHT.Skill.Shooting.long',\r\n  skullduggery: 'KAISERSCHLACHT.Skill.Skullduggery.long',\r\n  acrobatics: 'KAISERSCHLACHT.Skill.Acrobatics.long',\r\n  knowledgeMen: 'KAISERSCHLACHT.Skill.KnowledgeMen.long',\r\n  knowledgeMachines: 'KAISERSCHLACHT.Skill.KnowledgeMachines.long',\r\n  knowledgeMagic: 'KAISERSCHLACHT.Skill.KnowledgeMagic.long',\r\n  empathy: 'KAISERSCHLACHT.Skill.Empathy.long',\r\n  manipulation: 'KAISERSCHLACHT.Skill.Manipulation.long',\r\n  intimidation: 'KAISERSCHLACHT.Skill.Intimidation.long',\r\n\r\n};\r\nKAISERSCHLACHT.classStats = {\r\n  faith: 'KAISERSCHLACHT.ClassStat.Faith.long',\r\n  scrap: 'KAISERSCHLACHT.ClassStat.Scrap.long',\r\n  tactics: 'KAISERSCHLACHT.ClassStat.Tactics.long',\r\n  static: 'KAISERSCHLACHT.ClassStat.Static.long',\r\n  moxie: 'KAISERSCHLACHT.ClassStat.Moxie.long',\r\n  heart: 'KAISERSCHLACHT.ClassStat.Heart.long',\r\n  grit: 'KAISERSCHLACHT.ClassStat.Grit.long',\r\n};\r\nKAISERSCHLACHT.abilityAbbreviations = {\r\n  physique: 'KAISERSCHLACHT.Ability.Physique.abbr',\r\n  finesse: 'KAISERSCHLACHT.Ability.Finesse.abbr',\r\n  wits: 'KAISERSCHLACHT.Ability.Wits.abbr',\r\n  presence: 'KAISERSCHLACHT.Ability.Presence.abbr',\r\n};\r\nKAISERSCHLACHT.skillAbbreviations = {\r\n  brawl: 'KAISERSCHLACHT.Skill.Brawl.abbr',\r\n  athletics: 'KAISERSCHLACHT.Skill.Athletics.abbr',\r\n  smash: 'KAISERSCHLACHT.Skill.Smash.abbr',\r\n  shooting: 'KAISERSCHLACHT.Skill.Shooting.abbr',\r\n  skullduggery: 'KAISERSCHLACHT.Skill.Skullduggery.abbr',\r\n  acrobatics: 'KAISERSCHLACHT.Skill.Acrobatics.abbr',\r\n  knowledgeMen: 'KAISERSCHLACHT.Skill.KnowledgeMen.abbr',\r\n  knowledgeMachines: 'KAISERSCHLACHT.Skill.KnowledgeMachines.abbr',\r\n  knowledgeMagic: 'KAISERSCHLACHT.Skill.KnowledgeMagic.abbr',\r\n  empathy: 'KAISERSCHLACHT.Skill.Empathy.abbr',\r\n  manipulation: 'KAISERSCHLACHT.Skill.Manipulation.abbr',\r\n  intimidation: 'KAISERSCHLACHT.Skill.Intimidation.abbr',\r\n\r\n};\n\n// Import application classes.\r\n// import { KSHotbar } from './applications/hotbar.mjs';\r\n// Import document classes.\r\nglobalThis.kaiserschlacht = {\r\n  KSActor,\r\n  KSItem,\r\n  rollItemMacro,\r\n  createItemMacro,\r\n  KSChatMessage,\r\n  KSRoll,\r\n  config: KAISERSCHLACHT\r\n};\r\n/* -------------------------------------------- */\r\n/*  Init Hook                                   */\r\n/* -------------------------------------------- */\r\n\r\nHooks.once('init', function () {\r\n  // Add utility classes to the global game object so that they're more easily\r\n  // accessible in global contexts.\r\n\r\n  globalThis.kaiserschlacht = game.kaiserschlacht = Object.assign(game.system, globalThis.kaiserschlacht);\r\n  // Add custom constants for configuration.\r\n  CONFIG.KAISERSCHLACHT = KAISERSCHLACHT;\r\n  CONFIG.weaponTagWhitelist = [\"AP\", \"Awesome\", \"Blast\", \"Block\", \"Breaching\", \"Cobbled\", \"Combo\", \"Deployed\",\r\n    \"Double-Barrel\", \"Illuminating\", \"Lasting\", \"Parry\", \"Piercing\", \"Reach\",\r\n    \"Signal\", \"Slam-Fire\", \"Slow\", \"Smokescreen\", \"Squad\", \"Stream\", \"Terror\", \"Unwieldy\", \"Utility\"];\r\n  /**\r\n   * An array of status effects which can be applied to a TokenDocument.\r\n   * Each effect can either be a string for an icon path, or an object representing an Active Effect data.\r\n   * @override\r\n   * @type {Array<string|ActiveEffectData>}\r\n   */\r\n  CONFIG.statusEffects = [\r\n    {\r\n      id: \"dead\",\r\n      name: \"EFFECT.StatusDead\",\r\n      icon: \"icons/svg/skull.svg\"\r\n    },\r\n    {\r\n      id: \"unconscious\",\r\n      name: \"EFFECT.StatusUnconscious\",\r\n      icon: \"icons/svg/unconscious.svg\"\r\n    },\r\n    {\r\n      id: \"stun\",\r\n      name: \"EFFECT.StatusStunned\",\r\n      icon: \"icons/svg/daze.svg\"\r\n    },\r\n    {\r\n      id: \"prone\",\r\n      name: \"EFFECT.StatusProne\",\r\n      icon: \"icons/svg/falling.svg\"\r\n    },\r\n    {\r\n      id: \"restrain\",\r\n      name: \"EFFECT.StatusRestrained\",\r\n      icon: \"icons/svg/net.svg\"\r\n    },\r\n    {\r\n      id: \"paralysis\",\r\n      name: \"EFFECT.StatusParalysis\",\r\n      icon: \"icons/svg/paralysis.svg\"\r\n    },\r\n    {\r\n      id: \"blind\",\r\n      name: \"EFFECT.StatusBlind\",\r\n      icon: \"icons/svg/blind.svg\"\r\n    },\r\n    {\r\n      id: \"fear\",\r\n      name: \"EFFECT.StatusFear\",\r\n      icon: \"icons/svg/terror.svg\"\r\n    },\r\n    {\r\n      id: \"bleeding\",\r\n      name: \"EFFECT.StatusBleeding\",\r\n      icon: \"icons/svg/blood.svg\"\r\n    },\r\n    {\r\n      id: \"disease\",\r\n      name: \"EFFECT.StatusDisease\",\r\n      icon: \"icons/svg/biohazard.svg\"\r\n    },\r\n    {\r\n      id: \"invisible\",\r\n      name: \"EFFECT.StatusInvisible\",\r\n      icon: \"icons/svg/invisible.svg\"\r\n    }\r\n  ];\r\n  /**\r\n   * Set an initiative formula for the system\r\n   * @type {String}\r\n   */\r\n  CONFIG.Combat.initiative = {\r\n    formula: '@initiative',\r\n    decimals: 2,\r\n  };\r\n\r\n  // Define custom Document classes\r\n  CONFIG.Actor.documentClass = KSActor;\r\n  CONFIG.Item.documentClass = KSItem;\r\n  CONFIG.ChatMessage.documentClass = KSChatMessage;\r\n  // CONFIG.ui.hotbar = KSHotbar;\r\n  // Define and push custom dice types\r\n  CONFIG.Dice.KSRoll = KSRoll;\r\n  CONFIG.Dice.rolls.push(KSRoll);\r\n  // Active Effects are never copied to the Actor,\r\n  // but will still apply to the Actor from within the Item\r\n  // if the transfer property on the Active Effect is true.\r\n  CONFIG.ActiveEffect.legacyTransferral = false;\r\n\r\n  // Register sheet application classes\r\n  Actors.unregisterSheet('core', ActorSheet);\r\n  Actors.registerSheet('kaiserschlacht', KSActorSheet, {\r\n    makeDefault: true,\r\n    label: 'KAISERSCHLACHT.SheetLabels.Actor',\r\n  });\r\n  Items.unregisterSheet('core', ItemSheet);\r\n  Items.registerSheet('kaiserschlacht', KSItemSheet, {\r\n    makeDefault: true,\r\n    label: 'KAISERSCHLACHT.SheetLabels.Item',\r\n  });\r\n\r\n  // Preload Handlebars templates.\r\n  return preloadHandlebarsTemplates();\r\n});\r\n\r\n/* -------------------------------------------- */\r\n/*  Handlebars Helpers                          */\r\n/* -------------------------------------------- */\r\n\r\n// If you need to add Handlebars helpers, here is a useful example:\r\nHandlebars.registerHelper('toLowerCase', function (str) {\r\n  return str.toLowerCase();\r\n});\r\nHandlebars.registerHelper(\"json\", (data) => {\r\n  return JSON.stringify(data);\r\n});\r\n/* -------------------------------------------- */\r\n/*  Ready Hook                                  */\r\n/* -------------------------------------------- */\r\n\r\nHooks.once('ready', function () {\r\n  // Wait to register hotbar drop hook on ready so that modules could register earlier if they want to\r\n\r\n  Hooks.on(\"hotbarDrop\", (bar, data, slot) => {\r\n    if ([\"Item\"].includes(data.type)) {\r\n      createItemMacro(data, slot);\r\n      return false;\r\n    }\r\n  });\r\n\r\n});\r\n\r\n//dice so nice special color for difficulty dice\r\nHooks.once('diceSoNiceReady', (dice3d) => {\r\n  dice3d.addColorset({\r\n    name: 'diff',\r\n    description: 'Difficulty dice.',\r\n    category: 'Colors',\r\n    foreground: '#ffe436',\r\n    background: '#000000',\r\n    outline: 'black',\r\n    texture: 'none',\r\n    material: 'plastic'\r\n  });\r\n\r\n});\r\n\r\n/* -------------------------------------------- */\r\n/*  Hotbar Macros                               */\r\n/* -------------------------------------------- */\r\n\r\n/**\r\n * Create a Macro from an Item drop.\r\n * Get an existing item macro if one exists, otherwise create a new one.\r\n * @param {Object} data     The dropped data\r\n * @returns {Promise}\r\n */\r\nasync function createItemMacro(data, slot) {\r\n  // First, determine if this is a valid owned item.\r\n  console.log(data.type);\r\n  if (data.type !== 'Item') {\r\n    console.log(\"Wrong type for making macros.\");\r\n    return;\r\n  }\r\n  if (!data.uuid.includes('Actor.') && !data.uuid.includes('Token.')) {\r\n    return ui.notifications.warn(\r\n      'You can only create macro buttons for owned Items'\r\n    );\r\n  }\r\n  // If it is, retrieve it based on the uuid.\r\n  const item = await Item.implementation.fromDropData(data);\r\n  // Create the macro command using the uuid.\r\n  const command = `game.kaiserschlacht.rollItemMacro(\"${data.uuid}\");`;\r\n  const macro = game.macros.find(\r\n    (m) => m.name === item.name && m.command === command)\r\n    || await Macro.create({\r\n      name: item.name,\r\n      type: 'script',\r\n      scope: \"actor\",\r\n      img: item.img,\r\n      command: command,\r\n      flags: { 'kaiserschlacht.itemMacro': true },\r\n    });\r\n  game.user.assignHotbarMacro(macro, slot);\r\n  return;\r\n}\r\n\r\n/**\r\n * Create a Macro from an Item drop.\r\n * Get an existing item macro if one exists, otherwise create a new one.\r\n * @param {string} itemUuid\r\n */\r\nfunction rollItemMacro(itemUuid) {\r\n  // Reconstruct the drop data so that we can load the item.\r\n  const dropData = {\r\n    type: 'Item',\r\n    uuid: itemUuid,\r\n  };\r\n  // Load the item from the uuid.\r\n  KSItem.fromDropData(dropData).then((item) => {\r\n    // Determine if the item loaded and if it's an owned item.\r\n    if (!item || !item.parent) {\r\n      const itemName = item?.name ?? itemUuid;\r\n      return ui.notifications.warn(\r\n        `Could not find item ${itemName}. You may need to delete and recreate this macro.`\r\n      );\r\n    }\r\n    if (item.type == 'weapon') {\r\n      item.attackRoll();\r\n    }\r\n    else {// Trigger the item roll\r\n      item.roll();\r\n    }\r\n  });\r\n}\n\nexport { createItemMacro, rollItemMacro };\n"],"file":"kaiserschlacht.mjs"}